{"version":3,"sources":["Components/Layouts/Footer.js","Components/Layouts/MetaData.js","constants/productConstants.js","actions/productActions.js","Components/products/Products.js","Components/Layouts/Loader.js","constants/userConstant.js","actions/userAction.js","Components/Layouts/Search.js","Components/Layouts/Header.js","Components/Layouts/Banner.js","Components/Home.js","Components/review/ListReviews.js","constants/cartConstants.js","actions/cartAction.js","Components/products/ProductDetails.js","Components/cart/Cart.js","Components/cart/CheckOutSteps.js","Components/cart/ShippingInfo.js","Components/cart/ConfirmOrder.js","constants/orderConstant.js","actions/orderAction.js","Components/cart/Payment.js","Components/cart/OrderSuccess.js","Components/order/ListOrders.js","Components/user/Login.js","Components/user/Register.js","Components/user/Profile.js","Components/user/UpdateProfile.js","Components/user/UpdatePassword.js","Components/user/ForgotPassword.js","Components/user/NewPassword.js","Components/admin/dashboard/Sidebar.js","Components/admin/dashboard/Title.js","Components/admin/dashboard/Dashboard.js","Components/admin/ProductList.js","Components/admin/NewProduct.js","Components/admin/UpdateProduct.js","Components/admin/OrderList.js","Components/admin/ProcessOrder.js","Components/admin/UsersList.js","Components/admin/UpdateUser.js","Components/admin/ProductReviews.js","store.js","reducer/productReducers.js","reducer/userReducer.js","reducer/cartReducers.js","reducer/orderReducer.js","Components/Routes/protectedRoute.js","App.js","index.js"],"names":["Footer","class","MetaData","title","Helmet","ALL_PRODUCT_REQUEST","ALL_PRODUCT_SUCCESS","ALL_PRODUCT_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","NEW_REVIEW_REQUEST","NEW_REVIEW_SUCCESS","NEW_REVIEW_FAIL","NEW_REVIEW_RESET","ADMIN_PRODUCT_REQUEST","ADMIN_PRODUCT_SUCCESS","ADMIN_PRODUCT_FAIL","NEW_PRODUCT_REQUEST","NEW_PRODUCT_SUCCESS","NEW_PRODUCT_FAIL","NEW_PRODUCT_RESET","DELETE_PRODUCT_REQUEST","DELETE_PRODUCT_SUCCESS","DELETE_PRODUCT_FAIL","DELETE_PRODUCT_RESET","UPDATE_PRODUCT_REQUEST","UPDATE_PRODUCT_SUCCESS","UPDATE_PRODUCT_FAIL","UPDATE_PRODUCT_RESET","GET_REVIEWS_REQUEST","GET_REVIEWS_SUCCESS","GET_REVIEWS_FAIL","DELETE_REVIEW_REQUEST","DELETE_REVIEW_SUCCESS","DELETE_REVIEW_FAIL","DELETE_REVIEW_RESET","CLEAR_ERRORS","getProductDetails","id","dispatch","a","type","axios","get","data","payload","product","response","errMessage","getAdminProducts","products","getProductReviews","reviews","clearError","Products","col","className","src","images","url","alt","name","to","_id","style","width","ratings","numOfReviews","price","Loader","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAIL","REGISTER_USER_REQUEST","REGISTER_USER_SUCCESS","REGISTER_USER_FAIL","LOAD_LOGGED_USER_REQUEST","LOAD_LOGGED_USER_SUCCESS","LOAD_LOGGED_USER_FAIL","LOGOUT_SUCCESS","LOGOUT_FAIL","UPDATE_PROFILE_REQUEST","UPDATE_PROFILE_SUCCESS","UPDATE_PROFILE_FAIL","UPDATE_PROFILE_RESET","UPDATE_PASSWORD_REQUEST","UPDATE_PASSWORD_SUCCESS","UPDATE_PASSWORD_FAIL","UPDATE_PASSWORD_RESET","FORGOT_PASSWORD_REQUEST","FORGOT_PASSWORD_SUCCESS","FORGOT_PASSWORD_FAIL","NEW_PASSWORD_REQUEST","NEW_PASSWORD_SUCCESS","NEW_PASSWORD_FAIL","ALL_USERS_REQUEST","ALL_USERS_SUCCESS","ALL_USERS_FAIL","UPDATE_USER_REQUEST","UPDATE_USER_SUCCESS","UPDATE_USER_FAIL","UPDATE_USER_RESET","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","DELETE_USER_REQUEST","DELETE_USER_SUCCESS","DELETE_USER_FAIL","DELETE_USER_RESET","load_user","user","allUsers","users","useStyles","makeStyles","theme","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginRight","spacing","marginLeft","breakpoints","up","maxWidth","searchIcon","padding","height","pointerEvents","display","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","Search","history","useState","keyword","setKeyword","classes","onSubmit","e","preventDefault","trim","push","InputBase","placeholder","root","input","inputProps","onChange","target","value","appBar","background","cartBtn","margin","login_btn","grow","flexGrow","logo","sectionDesktop","sectionMobile","Header","alert","useAlert","useDispatch","useSelector","state","auth","loading","cartItems","cart","logoutHandler","success","React","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","Boolean","isMobileMenuOpen","handleMobileMenuClose","handleMenuClose","menuId","renderMenu","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","onClose","role","MenuItem","onClick","mobileMenuId","renderMobileMenu","IconButton","aria-label","Badge","badgeContent","length","AppBar","Toolbar","render","Box","textDecoration","edge","aria-controls","aria-haspopup","event","currentTarget","Avatar","avatar","Button","variant","Banner","Carousel","Item","extendedIcon","list","cards","marginTop","Home","match","left","right","setState","toggleDrawer","anchor","key","clsx","onKeyDown","Container","component","Slider","valueLabelDisplay","aria-labelledby","min","max","defaultValue","marks","label","setPrice","cattegories","map","category","listStyle","cursor","setCategory","stars","setRating","currentPage","setCurrentPage","rating","error","productsCount","resPerPage","filteredProductCount","params","useEffect","link","getProducts","count","fontSize","Fab","Drawer","items","activePage","itemsCountPerPage","totalItemsCount","pageNumber","nextPageText","prevPageText","firstPageText","lastPageText","itemClass","linkClass","ListReviews","review","comment","ADD_TO_CART","REMOVE_CART_ITEM","SAVE_SHIPPING_INFO","addItemsToCart","quantity","getState","image","stock","localStorage","setItem","JSON","stringify","ProductDetails","qty","setQty","productDetails","newReview","reviewError","setComment","pause","img","public_id","document","querySelector","valueAsNumber","qauntity","readOnly","disabled","description","seller","data-toggle","data-target","querySelectorAll","showRatings","forEach","star","index","starValue","classList","add","remove","addEventListener","tabIndex","aria-hidden","data-dismiss","reviewData","formData","FormData","set","config","headers","put","Cart","removeCartHandler","removeItemsFromCart","item","newQty","decreaseQuantity","increaseQuantity","reduce","acc","Number","toFixed","CheckOutSteps","shipping","confirm","payment","ShippingInfo","countriesList","Object","values","countries","shippingInfo","address","setAddress","city","setCity","phoneNo","setPhoneNo","postalCode","setPostalCode","country","setCountry","htmlFor","required","ConfirmOrder","itemPrice","shippingPrice","taxPrice","totalPrice","sessionStorage","CREATE_ORDER_REQUEST","CREATE_ORDER_SUCCESS","CREATE_ORDER_FAIL","MY_ORDERS_REQUEST","MY_ORDERS_SUCCESS","MY_ORDERS_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ALL_ORDERS_REQUEST","ALL_ORDERS_SUCCESS","ALL_ORDERS_FAIL","UPDATE_ORDER_REQUEST","UPDATE_ORDER_SUCCESS","UPDATE_ORDER_FAIL","UPDATE_ORDER_RESET","DELETE_ORDER_REQUEST","DELETE_ORDER_SUCCESS","DELETE_ORDER_FAIL","DELETE_ORDER_RESET","createOrder","order","post","getOrderDetails","allOrders","paper","flexDirection","secondary","main","form","submit","options","base","invalid","Payment","newOrder","Alert","stripe","useStripe","elements","useElements","orderItems","orderInfo","parse","getItem","itemsPrice","paymentData","amount","Math","round","submitHandler","res","clientSecret","client_secret","confirmCardPayment","payment_method","card","getElement","CardNumberElement","billing_details","email","result","message","paymentIntent","status","paymentInfo","console","log","CssBaseline","Typography","Grid","container","xs","InputLabel","shrink","fullWidth","OrderSuccess","ListOrders","myOrders","orders","columns","field","sort","rows","numOfItems","orderStatus","String","includes","actions","setOrders","bordered","striped","hover","responsive","Login","location","isAuthenticated","setEmail","password","setPassword","redirect","split","login","TextField","autoComplete","autoFocus","Register","setUser","setAvatar","avatarPreview","setAvatarPreview","reader","FileReader","onload","readyState","readAsDataURL","files","userData","encType","sm","accept","justify","Profile","createdAt","substring","UpdateProfile","setName","isUpdated","UpdatePassword","oldPassword","setOldPassword","passwords","ForgotPassword","forogotPassword","forgotPassowrd","NewPassword","confirmPassword","setConfirmPassword","token","acc_detail","heading","typography","pxToRem","fontWeight","fontWeightRegular","toolbar","paddingRight","toolbarIcon","mixins","zIndex","drawer","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButton","menuButtonHidden","drawerPaper","whiteSpace","drawerPaperClose","overflowX","overflow","icon_color","Sidebar","setOpen","Divider","List","ListItem","button","ListItemIcon","ListItemText","primary","ListSubheader","inset","text_color","Title","props","gutterBottom","children","appBarSpacer","content","paddingTop","paddingBottom","textAlign","fixedHeight","depositContext","flex","Dashboard","totalAmount","outOfStock","prod","fixedHeightPaper","md","lg","Paper","ProductList","deleteError","isDeleted","deleteProductHandler","delete","deleteProduct","setProducts","NewProduct","setDescription","setStock","setSeller","setImages","imagesPreview","setImagesPreview","newProduct","productData","append","multiple","Array","from","file","oldArray","UpdateProduct","oldImages","setOldImages","updateError","productID","OrderList","deleteOrderHandler","deleteOrder","ProcessOrder","setStatus","orderDetails","orderID","updateOrderHandler","orderData","updateOrder","shippingDetails","isPaid","UsersList","deleteUserHandler","deleteUser","setUsers","UpdateUser","setRole","userDetails","userID","ProductReviews","productReviews","productId","setProductId","deleteReviewHandler","deleteReview","setReviews","reducer","combineReducers","action","isItemExist","find","i","filter","initialState","middleWare","thunk","store","createStore","composeWithDevTools","applyMiddleware","ProtectedRoute","isAdmin","Component","rest","App","stripeApiKey","setStripeApiKey","getStripeApiKey","path","exact","Shipping","loadStripe","timeout","positions","BOTTOM_CENTER","SCALE","ReactDOM","template","AlertTemplate","getElementById"],"mappings":"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","file":"static/js/main.22de5675.chunk.js","sourcesContent":["import React, { Fragment } from 'react';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <Fragment>\r\n            <footer class=\"py-1\">\r\n                <p class=\"text-center mt-1\">\r\n                    Shopping Cart - 2020-2021, All Rights Reserved\r\n                </p>\r\n            </footer>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react';\r\nimport {Helmet} from 'react-helmet';\r\n\r\nconst MetaData = ({title}) => {\r\n    return (\r\n        <Helmet>\r\n            <title>{`${title} - ShopIT`}</title>\r\n        </Helmet>\r\n    )\r\n}\r\n\r\nexport default MetaData\r\n","export const ALL_PRODUCT_REQUEST = 'ALL_PRODUCT_REQUEST';\r\nexport const ALL_PRODUCT_SUCCESS = 'ALL_PRODUCT_SUCCESS';\r\nexport const ALL_PRODUCT_FAIL = 'ALL_PRODUCT_FAIL';\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST';\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS';\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL';\r\n\r\nexport const NEW_REVIEW_REQUEST = 'NEW_REVIEW_REQUEST';\r\nexport const NEW_REVIEW_SUCCESS = 'NEW_REVIEW_SUCCESS';\r\nexport const NEW_REVIEW_FAIL = 'NEW_REVIEW_FAIL';\r\nexport const NEW_REVIEW_RESET = 'NEW_REVIEW_RESET';\r\n\r\nexport const ADMIN_PRODUCT_REQUEST = 'ADMIN_PRODUCT_REQUEST';\r\nexport const ADMIN_PRODUCT_SUCCESS = 'ADMIN_PRODUCT_SUCCESS';\r\nexport const ADMIN_PRODUCT_FAIL = 'ADMIN_PRODUCT_FAIL';\r\n\r\nexport const NEW_PRODUCT_REQUEST = 'NEW_PRODUCT_REQUEST';\r\nexport const NEW_PRODUCT_SUCCESS = 'NEW_PRODUCT_SUCCESS';\r\nexport const NEW_PRODUCT_FAIL = 'NEW_PRODUCT_FAIL';\r\nexport const NEW_PRODUCT_RESET = 'NEW_PRODUCT_RESET';\r\n\r\nexport const DELETE_PRODUCT_REQUEST = 'DELETE_PRODUCT_REQUEST';\r\nexport const DELETE_PRODUCT_SUCCESS = 'DELETE_PRODUCT_SUCCESS';\r\nexport const DELETE_PRODUCT_FAIL = 'DELETE_PRODUCT_FAIL';\r\nexport const DELETE_PRODUCT_RESET = 'DELETE_PRODUCT_RESET';\r\n\r\nexport const UPDATE_PRODUCT_REQUEST = 'UPDATE_PRODUCT_REQUEST';\r\nexport const UPDATE_PRODUCT_SUCCESS = 'UPDATE_PRODUCT_SUCCESS';\r\nexport const UPDATE_PRODUCT_FAIL = 'UPDATE_PRODUCT_FAIL';\r\nexport const UPDATE_PRODUCT_RESET = 'UPDATE_PRODUCT_RESET';\r\n\r\nexport const GET_REVIEWS_REQUEST = 'GET_REVIEWS_REQUEST';\r\nexport const GET_REVIEWS_SUCCESS = 'GET_REVIEWS_SUCCESS';\r\nexport const GET_REVIEWS_FAIL = 'GET_REVIEWS_FAIL';\r\n\r\nexport const DELETE_REVIEW_REQUEST = 'DELETE_REVIEW_REQUEST';\r\nexport const DELETE_REVIEW_SUCCESS = 'DELETE_REVIEW_SUCCESS';\r\nexport const DELETE_REVIEW_FAIL = 'DELETE_REVIEW_FAIL';\r\nexport const DELETE_REVIEW_RESET = 'DELETE_REVIEW_RESET';\r\n\r\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS';\r\n","import axios from 'axios';\r\nimport {\r\n    ALL_PRODUCT_FAIL,\r\n    ALL_PRODUCT_REQUEST,\r\n    ALL_PRODUCT_SUCCESS,\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n    NEW_REVIEW_REQUEST,\r\n    NEW_REVIEW_SUCCESS,\r\n    NEW_REVIEW_FAIL,\r\n    ADMIN_PRODUCT_REQUEST,\r\n    ADMIN_PRODUCT_FAIL,\r\n    ADMIN_PRODUCT_SUCCESS,\r\n    NEW_PRODUCT_REQUEST,\r\n    NEW_PRODUCT_SUCCESS,\r\n    NEW_PRODUCT_FAIL,\r\n    DELETE_PRODUCT_REQUEST,\r\n    DELETE_PRODUCT_SUCCESS,\r\n    DELETE_PRODUCT_FAIL,\r\n    UPDATE_PRODUCT_REQUEST,\r\n    UPDATE_PRODUCT_SUCCESS,\r\n    UPDATE_PRODUCT_FAIL,\r\n    GET_REVIEWS_REQUEST,\r\n    GET_REVIEWS_SUCCESS,\r\n    GET_REVIEWS_FAIL,\r\n    DELETE_REVIEW_REQUEST,\r\n    DELETE_REVIEW_SUCCESS,\r\n    DELETE_REVIEW_FAIL,\r\n    CLEAR_ERRORS,\r\n} from '../constants/productConstants';\r\n\r\nexport const getProducts = (keyword = '', currentPage = 1, price, category, ratings = 0) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: ALL_PRODUCT_REQUEST })\r\n\r\n        let link = `/api/v1/products?keyword=${keyword}&page=${currentPage}&price[lte]=${price[1]}&price[gte]=${price[0]}&ratings[gte]=${ratings}`;\r\n\r\n        // if user is on search page then send category request to backend\r\n        if (category) {\r\n            link = `/api/v1/products?keyword=${keyword}&page=${currentPage}&price[lte]=${price[1]}&price[gte]=${price[0]}&category=${category}&ratings[gte]=${ratings}`;\r\n        }\r\n        const { data } = await axios.get(link);\r\n\r\n        dispatch({\r\n            type: ALL_PRODUCT_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ALL_PRODUCT_FAIL,\r\n            payload: error.response.data.errMessage\r\n        })\r\n    }\r\n}\r\n\r\n// product details action\r\nexport const getProductDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/v1/product/${id}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data.product\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload: error.response.data.errMessage\r\n        })\r\n    }\r\n}\r\n\r\n// create or update new review\r\nexport const newReview = (reviewData) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: NEW_REVIEW_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put('/api/v1/review', reviewData, config);\r\n\r\n        dispatch({\r\n            type: NEW_REVIEW_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: NEW_REVIEW_FAIL,\r\n            payload: error.response.data.errMessage\r\n        })\r\n    }\r\n}\r\n\r\n// create new product\r\nexport const newProduct = (productData) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: NEW_PRODUCT_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post('/api/v1/admin/product/new', productData, config);\r\n\r\n        dispatch({\r\n            type: NEW_PRODUCT_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: NEW_PRODUCT_FAIL,\r\n            payload: error.response.data.errMessage\r\n        })\r\n    }\r\n}\r\n\r\n// get all products (admin) action\r\nexport const getAdminProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: ADMIN_PRODUCT_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/v1/admin/products`)\r\n\r\n        dispatch({\r\n            type: ADMIN_PRODUCT_SUCCESS,\r\n            payload: data.products\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ADMIN_PRODUCT_FAIL,\r\n            payload: error.response.data.errMessage\r\n        })\r\n    }\r\n}\r\n\r\n// delete products (admin)\r\nexport const deleteProduct = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: DELETE_PRODUCT_REQUEST })\r\n\r\n        const { data } = await axios.delete(`/api/v1/admin/product/${id}`)\r\n\r\n        dispatch({\r\n            type: DELETE_PRODUCT_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: DELETE_PRODUCT_FAIL,\r\n            payload: error.response.data.errMessage\r\n        })\r\n    }\r\n}\r\n\r\n// update product(ADMIN)\r\nexport const updateProduct = (id, productData) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: UPDATE_PRODUCT_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/v1/admin/product/${id}`, productData, config);\r\n\r\n        dispatch({\r\n            type: UPDATE_PRODUCT_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: UPDATE_PRODUCT_FAIL,\r\n            payload: error.response.data.errMessage\r\n        })\r\n    }\r\n}\r\n// get product reviews - ADMIN\r\nexport const getProductReviews = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: GET_REVIEWS_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/v1/reviews?id=${id}`)\r\n\r\n        dispatch({\r\n            type: GET_REVIEWS_SUCCESS,\r\n            payload: data.reviews\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: GET_REVIEWS_FAIL,\r\n            payload: error.response.data.errMessage\r\n        })\r\n    }\r\n}\r\n\r\n// Delete product review - ADMIN\r\nexport const deleteReview = (id, productId) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: DELETE_REVIEW_REQUEST })\r\n\r\n        const { data } = await axios.delete(`/api/v1/review?id=${id}&productId=${productId}`)\r\n\r\n        dispatch({\r\n            type: DELETE_REVIEW_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: DELETE_REVIEW_FAIL,\r\n            payload: error.response.data.errMessage\r\n        })\r\n    }\r\n}\r\n// clear errors\r\nexport const clearError = () => async (dispatch) => {\r\n    dispatch({\r\n        type: CLEAR_ERRORS\r\n    })\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Products = ({ product, col }) => {\r\n    return (\r\n        <div className={`custom_card col-6 col-md-4 col-lg-${col} my-3`}>\r\n            <div className=\"card rounded\" >\r\n                <img\r\n                    className=\"card-img-top \"\r\n                    src={product.images[0].url}\r\n                    alt={product.name}\r\n                />\r\n                <div className=\"card-body d-flex flex-column p-3\">\r\n                    <h5 className=\"card-title\">\r\n                        <Link to={`/product/${product._id}`} className='h5'>{product.name}</Link>\r\n                    </h5>\r\n                    <div className=\"ratings mt-auto\">\r\n                        <div className=\"rating-outer\">\r\n                            <div className=\"rating-inner\"\r\n                                style={{ width: `${(product.ratings / 5) * 100}%` }}></div>\r\n                        </div>\r\n                        <span id=\"no_of_reviews\">({product.numOfReviews} Reviews)</span>\r\n                    </div>\r\n                    <p className=\"card-text\">${product.price}</p>\r\n                    <Link to={`/product/${product._id}`} id=\"view_btn\" className=\"btn btn-block\">View Details</Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Products\r\n","import React from 'react'\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div className='loader'></div>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","export const LOGIN_REQUEST = 'LOGIN_REQUEST';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\r\n\r\nexport const REGISTER_USER_REQUEST = 'REGISTER_USER_REQUEST';\r\nexport const REGISTER_USER_SUCCESS = 'REGISTER_USER_SUCCESS';\r\nexport const REGISTER_USER_FAIL = 'REGISTER_USER_FAIL';\r\n\r\nexport const LOAD_LOGGED_USER_REQUEST = 'LOAD_LOGGED_USER_REQUEST';\r\nexport const LOAD_LOGGED_USER_SUCCESS = 'LOAD_LOGGED_USER_SUCCESS';\r\nexport const LOAD_LOGGED_USER_FAIL = 'LOAD_LOGGED_USER_FAIL';\r\n\r\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS';\r\nexport const LOGOUT_FAIL = 'LOGOUT_FAIL';\r\n\r\nexport const UPDATE_PROFILE_REQUEST = 'UPDATE_PROFILE_REQUEST';\r\nexport const UPDATE_PROFILE_SUCCESS = 'UPDATE_PROFILE_SUCCESS';\r\nexport const UPDATE_PROFILE_FAIL = 'UPDATE_PROFILE_FAIL';\r\nexport const UPDATE_PROFILE_RESET = 'UPDATE_PROFILE_RESET';\r\n\r\nexport const UPDATE_PASSWORD_REQUEST = 'UPDATE_PASSWORD_REQUEST';\r\nexport const UPDATE_PASSWORD_SUCCESS = 'UPDATE_PASSWORD_SUCCESS';\r\nexport const UPDATE_PASSWORD_FAIL = 'UPDATE_PASSWORD_FAIL';\r\nexport const UPDATE_PASSWORD_RESET = 'UPDATE_PASSWORD_RESET';\r\n\r\nexport const FORGOT_PASSWORD_REQUEST = 'FORGOT_PASSWORD_REQUEST';\r\nexport const FORGOT_PASSWORD_SUCCESS = 'FORGOT_PASSWORD_SUCCESS';\r\nexport const FORGOT_PASSWORD_FAIL = 'FORGOT_PASSWORD_FAIL';\r\n\r\nexport const NEW_PASSWORD_REQUEST = 'NEW_PASSWORD_REQUEST';\r\nexport const NEW_PASSWORD_SUCCESS = 'NEW_PASSWORD_SUCCESS';\r\nexport const NEW_PASSWORD_FAIL = 'NEW_PASSWORD_FAIL';\r\n\r\nexport const ALL_USERS_REQUEST = 'ALL_USERS_REQUEST';\r\nexport const ALL_USERS_SUCCESS = 'ALL_USERS_SUCCESS';\r\nexport const ALL_USERS_FAIL = 'ALL_USERS_FAIL';\r\n\r\nexport const UPDATE_USER_REQUEST = 'UPDATE_USER_REQUEST';\r\nexport const UPDATE_USER_SUCCESS = 'UPDATE_USER_SUCCESS';\r\nexport const UPDATE_USER_FAIL = 'UPDATE_USER_FAIL';\r\nexport const UPDATE_USER_RESET = 'UPDATE_USER_RESET';\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST';\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS';\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL';\r\n\r\nexport const DELETE_USER_REQUEST = 'DELETE_USER_REQUEST';\r\nexport const DELETE_USER_SUCCESS = 'DELETE_USER_SUCCESS';\r\nexport const DELETE_USER_FAIL = 'DELETE_USER_FAIL';\r\nexport const DELETE_USER_RESET = 'DELETE_USER_RESET';\r\n\r\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS';\r\n\r\n\r\n","import axios from 'axios';\r\n\r\nimport {\r\n    LOGIN_REQUEST,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    REGISTER_USER_REQUEST,\r\n    REGISTER_USER_SUCCESS,\r\n    REGISTER_USER_FAIL,\r\n    LOAD_LOGGED_USER_REQUEST,\r\n    LOAD_LOGGED_USER_SUCCESS,\r\n    LOAD_LOGGED_USER_FAIL,\r\n    LOGOUT_SUCCESS,\r\n    LOGOUT_FAIL,\r\n    UPDATE_PROFILE_REQUEST,\r\n    UPDATE_PROFILE_FAIL,\r\n    UPDATE_PROFILE_SUCCESS,\r\n    UPDATE_PASSWORD_REQUEST,\r\n    UPDATE_PASSWORD_SUCCESS,\r\n    UPDATE_PASSWORD_FAIL,\r\n    FORGOT_PASSWORD_REQUEST,\r\n    FORGOT_PASSWORD_SUCCESS,\r\n    FORGOT_PASSWORD_FAIL,\r\n    NEW_PASSWORD_REQUEST,\r\n    NEW_PASSWORD_SUCCESS,\r\n    NEW_PASSWORD_FAIL,\r\n    ALL_USERS_REQUEST,\r\n    ALL_USERS_SUCCESS,\r\n    ALL_USERS_FAIL,\r\n    UPDATE_USER_REQUEST,\r\n    UPDATE_USER_SUCCESS,\r\n    UPDATE_USER_FAIL,\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    DELETE_USER_REQUEST,\r\n    DELETE_USER_SUCCESS,\r\n    DELETE_USER_FAIL,\r\n    CLEAR_ERRORS\r\n} from '../constants/userConstant';\r\n\r\n// login\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: LOGIN_REQUEST })\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        const { data } = await axios.post('/api/v1/login', { email, password }, config)\r\n        dispatch({\r\n            type: LOGIN_SUCCESS,\r\n            payload: data.user\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: LOGIN_FAIL,\r\n            payload: error.response.data.errMessage\r\n        })\r\n    }\r\n}\r\n\r\n// Register User\r\nexport const register_user = (userData) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: REGISTER_USER_REQUEST })\r\n        const config = {\r\n            headers: {\r\n                // we have to set images also\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        }\r\n        const { data } = await axios.post('/api/v1/register', userData, config)\r\n        dispatch({\r\n            type: REGISTER_USER_SUCCESS,\r\n            payload: data.user\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: REGISTER_USER_FAIL,\r\n            payload: error.response.data.errMessage\r\n        })\r\n    }\r\n}\r\n\r\n// Load currently Logged User\r\nexport const load_user = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: LOAD_LOGGED_USER_REQUEST })\r\n\r\n        const { data } = await axios.get('/api/v1/me')\r\n        dispatch({\r\n            type: LOAD_LOGGED_USER_SUCCESS,\r\n            payload: data.user\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: LOAD_LOGGED_USER_FAIL,\r\n            payload: error.response.data.errMessage\r\n        })\r\n    }\r\n}\r\n\r\n// Logout User\r\nexport const logout = () => async (dispatch) => {\r\n    try {\r\n        const { data } = await axios.get('/api/v1/logout')\r\n        dispatch({\r\n            type: LOGOUT_SUCCESS,\r\n            payload: data.user\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: LOGOUT_FAIL,\r\n            payload: error.response.data.errMessage\r\n        })\r\n    }\r\n}\r\n// updated Profile\r\nexport const updateProfile = (userData) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: UPDATE_PROFILE_REQUEST })\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        }\r\n        const { data } = await axios.put('/api/v1/me/update', userData, config)\r\n        dispatch({\r\n            type: UPDATE_PROFILE_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: UPDATE_PROFILE_FAIL,\r\n            payload: error.response.data.errMessage\r\n        })\r\n    }\r\n}\r\n\r\n// updated Password\r\nexport const updatePassowrd = (passwords) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: UPDATE_PASSWORD_REQUEST })\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        const { data } = await axios.put('/api/v1/password/update', passwords, config)\r\n        dispatch({\r\n            type: UPDATE_PASSWORD_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: UPDATE_PASSWORD_FAIL,\r\n            payload: error.response.data.errMessage\r\n        })\r\n    }\r\n}\r\n// forgot Password\r\nexport const forgotPassowrd = (email) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: FORGOT_PASSWORD_REQUEST })\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        const { data } = await axios.post('/api/v1/password/forgot', email, config)\r\n        dispatch({\r\n            type: FORGOT_PASSWORD_SUCCESS,\r\n            payload: data.message\r\n        })\r\n\r\n    }\r\n    catch (error) {\r\n        dispatch({\r\n            type: FORGOT_PASSWORD_FAIL,\r\n            payload: error.response.data.errMessage\r\n        })\r\n    }\r\n}\r\n\r\n// reset Password\r\nexport const resetPassowrd = (token, passwords) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: NEW_PASSWORD_REQUEST })\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        const { data } = await axios.put(`/api/v1/password/reset/${token}`, passwords, config)\r\n        dispatch({\r\n            type: NEW_PASSWORD_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    }\r\n    catch (error) {\r\n        dispatch({\r\n            type: NEW_PASSWORD_FAIL,\r\n            payload: error.response.data.errMessage\r\n        })\r\n    }\r\n}\r\n\r\n// Get All Users - ADMIN\r\nexport const allUsers = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: ALL_USERS_REQUEST })\r\n\r\n        const { data } = await axios.get('/api/v1/admin/users')\r\n        dispatch({\r\n            type: ALL_USERS_SUCCESS,\r\n            payload: data.users\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ALL_USERS_FAIL,\r\n            payload: error.response.data.errMessage\r\n        })\r\n    }\r\n}\r\n\r\n// Update User - ADMIN\r\nexport const updateUser = (id, userData) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: UPDATE_USER_REQUEST })\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        const { data } = await axios.put(`/api/v1/admin/user/${id}`, userData, config)\r\n        dispatch({\r\n            type: UPDATE_USER_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    }\r\n    catch (error) {\r\n        dispatch({\r\n            type: UPDATE_USER_FAIL,\r\n            payload: error.response.data.errMessage\r\n        })\r\n    }\r\n}\r\n\r\n// Get User Details - ADMIN\r\nexport const getUserDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: USER_DETAILS_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/v1/admin/user/${id}`)\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data.user\r\n        })\r\n\r\n    }\r\n    catch (error) {\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload: error.response.data.errMessage\r\n        })\r\n    }\r\n}\r\n\r\n// Delete User - ADMIN\r\nexport const deleteUser = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: DELETE_USER_REQUEST })\r\n\r\n        const { data } = await axios.delete(`/api/v1/admin/user/${id}`)\r\n        dispatch({\r\n            type: DELETE_USER_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    }\r\n    catch (error) {\r\n        dispatch({\r\n            type: DELETE_USER_FAIL,\r\n            payload: error.response.data.errMessage\r\n        })\r\n    }\r\n}\r\n\r\n// clear errors\r\nexport const clearError = () => async (dispatch) => {\r\n    dispatch({\r\n        type: CLEAR_ERRORS\r\n    })\r\n}","import React, { useState } from 'react';\r\nimport { fade, makeStyles, InputBase } from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: fade(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: fade(theme.palette.common.white, 0.25),\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(3),\r\n            width: '100%',\r\n            maxWidth: '50%'\r\n        },\r\n    },\r\n    searchIcon: {\r\n        padding: theme.spacing(0, 2),\r\n        height: '100%',\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    inputRoot: { color: 'inherit', },\r\n    inputInput: {\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '70ch',\r\n        }\r\n    },\r\n}))\r\nconst Search = ({ history }) => {\r\n    const [keyword, setKeyword] = useState('');\r\n\r\n    const changeHandler = (e) => {\r\n        e.preventDefault();\r\n        if (keyword.trim()) {\r\n            history.push(`/search/${keyword}`)\r\n        }\r\n        else {\r\n            history.push('/')\r\n        }\r\n    }\r\n\r\n    const classes = useStyles();\r\n    return (\r\n\r\n        <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n                <SearchIcon />\r\n            </div>\r\n            <form onSubmit={changeHandler}>\r\n                <InputBase\r\n                    placeholder=\"Enter Product Name..\"\r\n                    classes={{\r\n                        root: classes.inputRoot,\r\n                        input: classes.inputInput,\r\n                    }}\r\n                    inputProps={{ 'aria-label': 'search' }}\r\n                    type=\"text\"\r\n                    onChange={(e) => setKeyword(e.target.value)}\r\n                />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search\r\n","import React from 'react';\r\nimport { Route, Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { logout } from '../../actions/userAction';\r\nimport { useAlert } from 'react-alert';\r\nimport Search from './Search';\r\nimport '../../App.css';\r\n\r\nimport {\r\n    makeStyles, AppBar, Toolbar, IconButton, Avatar, Badge, Box, Menu, MenuItem, Button\r\n} from '@material-ui/core';\r\n\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\r\nimport TocIcon from '@material-ui/icons/Toc';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    appBar: { background: '#0D2F36' },\r\n    cartBtn: { color: '#fff', margin: '6px 15px 0 0' },\r\n    login_btn: { height: '40px', width: '90px', margin: '6px 9px 0 9px' },\r\n    grow: { flexGrow: 1, },\r\n    logo: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'block',\r\n        },\r\n    },\r\n    sectionDesktop: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'flex',\r\n        },\r\n    },\r\n    sectionMobile: {\r\n        display: 'flex',\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'none',\r\n        },\r\n    },\r\n}));\r\n\r\nconst Header = () => {\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n    const { user, loading } = useSelector(state => state.auth);\r\n    const { cartItems } = useSelector(state => state.cart);\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout());\r\n        alert.success(\"Logged Out Successfully\");\r\n    }\r\n\r\n    // ------material ui --------\r\n    const classes = useStyles();\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n\r\n    const isMenuOpen = Boolean(anchorEl);\r\n    const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n    const handleProfileMenuOpen = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleMobileMenuClose = () => {\r\n        setMobileMoreAnchorEl(null);\r\n    };\r\n\r\n    const handleMenuClose = () => {\r\n        setAnchorEl(null);\r\n        handleMobileMenuClose();\r\n    };\r\n\r\n    const handleMobileMenuOpen = (event) => {\r\n        setMobileMoreAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const menuId = 'primary-search-account-menu';\r\n    const renderMenu = (\r\n        <Menu\r\n            anchorEl={anchorEl}\r\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            id={menuId}\r\n            keepMounted\r\n            transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            open={isMenuOpen}\r\n            onClose={handleMenuClose}\r\n        >\r\n            {user && user.role === 'admin' && (\r\n                <MenuItem onClick={handleMenuClose}>\r\n                    <Link className='dropdown-item' to='/dashboard'>Dashboard</Link>\r\n                </MenuItem>\r\n            )}\r\n\r\n            <MenuItem onClick={handleMenuClose}>\r\n                <Link className='dropdown-item' to='/orders/me'>Orders</Link>\r\n            </MenuItem>\r\n            <MenuItem onClick={handleMenuClose}>\r\n                <Link className='dropdown-item' to='/me'>Profile</Link>\r\n            </MenuItem>\r\n            <MenuItem onClick={handleMenuClose}>\r\n                <Link className='dropdown-item text-danger' to='/' onClick={logoutHandler}>Logout</Link>\r\n            </MenuItem>\r\n        </Menu>\r\n    );\r\n\r\n    const mobileMenuId = 'primary-search-account-menu-mobile';\r\n\r\n    const renderMobileMenu = (\r\n        <Menu\r\n            anchorEl={mobileMoreAnchorEl}\r\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            id={mobileMenuId}\r\n            keepMounted\r\n            transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            open={isMobileMenuOpen}\r\n            onClose={handleMobileMenuClose}\r\n        >\r\n            <MenuItem onClick={handleMenuClose}>\r\n                <IconButton aria-label=\"Home\" color=\"inherit\">\r\n                    <HomeIcon />\r\n                </IconButton>\r\n                <Link className='dropdown-item' to='/'>Home</Link>\r\n            </MenuItem>\r\n\r\n            <MenuItem onClick={handleMenuClose}>\r\n                <IconButton aria-label=\"show add to cart\" color=\"inherit\">\r\n                    <Badge badgeContent={cartItems.length} color=\"secondary\">\r\n                        <AddShoppingCartIcon />\r\n                    </Badge>\r\n                </IconButton>\r\n                <Link className='dropdown-item' to='/cart'>\r\n                    Cart\r\n                </Link>\r\n            </MenuItem>\r\n\r\n            {user && user.role === 'admin' && (\r\n                <MenuItem onClick={handleMenuClose}>\r\n                    <IconButton>\r\n                        <DashboardIcon />\r\n                    </IconButton>\r\n                    <Link className='dropdown-item' to='/dashboard'>Dashboard</Link>\r\n                </MenuItem>\r\n            )}\r\n\r\n            <MenuItem onClick={handleMenuClose}>\r\n                <IconButton>\r\n                    <TocIcon />\r\n                </IconButton>\r\n                <Link className='dropdown-item' to='/orders/me'>Orders</Link>\r\n            </MenuItem>\r\n            <MenuItem onClick={handleMenuClose}>\r\n                <IconButton>\r\n                    <AccountCircle />\r\n                </IconButton>\r\n                <Link className='dropdown-item' to='/me'>Profile</Link>\r\n            </MenuItem>\r\n\r\n            <MenuItem onClick={handleMenuClose}>\r\n                <IconButton>\r\n                    <ExitToAppIcon />\r\n                </IconButton>\r\n                <Link className='dropdown-item text-danger' to='/' onClick={logoutHandler}>Logout</Link>\r\n            </MenuItem>\r\n\r\n        </Menu>\r\n    );\r\n    // ------material ui --------\r\n    return (\r\n        <div className={classes.grow}>\r\n            <AppBar position=\"static\" className={classes.appBar}>\r\n                <Toolbar>\r\n                    <div className={classes.logo}>\r\n                        <Link to='/'>\r\n                            <img src='/image/logo.png' width='250' height='60' alt='Logo' />\r\n                        </Link>\r\n                    </div>\r\n\r\n                    <Route render={({ history }) => <Search history={history} />} />\r\n\r\n                    <div className={classes.grow} />\r\n                    <div className={classes.sectionDesktop}>\r\n                        <Box>\r\n                            <Link to='/cart' style={{ textDecoration: 'none' }}>\r\n                                <IconButton aria-label=\"show items number\" className={classes.cartBtn}>\r\n                                    <Badge badgeContent={cartItems.length} color=\"secondary\">\r\n                                        <AddShoppingCartIcon />\r\n                                    </Badge>\r\n                                </IconButton>\r\n                            </Link>\r\n                        </Box>\r\n\r\n                        {user ? (\r\n                            <IconButton\r\n                                edge=\"end\"\r\n                                aria-label=\"account of current user\"\r\n                                aria-controls={menuId}\r\n                                aria-haspopup=\"true\"\r\n                                onClick={handleProfileMenuOpen}\r\n                                color=\"inherit\"\r\n                            >\r\n                                <Avatar>\r\n                                    <img src={user.avatar && user.avatar.url}\r\n                                        alt={user && user.name}\r\n                                        className='avatar'\r\n                                    />\r\n                                </Avatar>\r\n                            </IconButton>\r\n                        )\r\n                            : !loading &&\r\n                            <Link to='/login' style={{ textDecoration: 'none' }}>\r\n                                <Button className={classes.login_btn} variant=\"contained\" color=\"secondary\">Login</Button>\r\n                            </Link>\r\n                        }\r\n                    </div>\r\n                    <div className={classes.sectionMobile}>\r\n                        {user ? (\r\n                            <IconButton\r\n                                aria-label=\"show more\"\r\n                                aria-controls={mobileMenuId}\r\n                                aria-haspopup=\"true\"\r\n                                onClick={handleMobileMenuOpen}\r\n                                color=\"inherit\"\r\n                            >\r\n                                <MoreIcon />\r\n                            </IconButton>\r\n                        )\r\n                            : !loading &&\r\n                            <Link to='/login' style={{ textDecoration: 'none' }}>\r\n                                <Button className={classes.login_btn} variant=\"contained\" color=\"secondary\">Login</Button>\r\n                            </Link>\r\n                        }\r\n                    </div>\r\n                </Toolbar>\r\n            </AppBar>\r\n            {renderMobileMenu}\r\n            {renderMenu}\r\n        </div>\r\n    );\r\n}\r\nexport default Header","import React from 'react';\r\nimport { Carousel } from 'react-bootstrap';\r\n\r\nconst Banner = () => {\r\n    return (\r\n        <Carousel>\r\n            <Carousel.Item>\r\n                <img\r\n                    className=\"d-block w-100 banner_img\"\r\n                    src=\"/image/banner1.jpg\"\r\n                    alt=\"First slide\"\r\n                />\r\n            </Carousel.Item>\r\n            <Carousel.Item>\r\n                <img\r\n                    className=\"d-block w-100 banner_img\"\r\n                    src=\"/image/banner2.jpg\"\r\n                    alt=\"Second slide\"\r\n                />\r\n            </Carousel.Item>\r\n        </Carousel>\r\n    )\r\n}\r\n\r\nexport default Banner\r\n","import React, { Fragment, useEffect, useState } from 'react';\r\nimport MetaData from './Layouts/MetaData';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getProducts } from '../actions/productActions';\r\nimport Products from './products/Products';\r\nimport Loader from './Layouts/Loader';\r\nimport { useAlert } from 'react-alert';\r\nimport Pagination from \"react-js-pagination\";\r\nimport { Slider } from '@material-ui/core';\r\nimport Header from './Layouts/Header';\r\nimport Banner from './Layouts/Banner';\r\n\r\nimport clsx from 'clsx';\r\nimport { makeStyles, Drawer, Container, Fab, IconButton } from '@material-ui/core';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport KeyboardTabIcon from '@material-ui/icons/KeyboardTab';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    margin: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    extendedIcon: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    list: {\r\n        width: 310,\r\n        height: 'auto',\r\n        backgroundColor: '#F5F5F5',\r\n    },\r\n    cards: {\r\n        marginTop: theme.spacing(3),\r\n    }\r\n}));\r\n\r\nconst Home = ({ match }) => {\r\n    // material ui\r\n    const classes = useStyles();\r\n    const [state, setState] = useState({\r\n        left: false,\r\n        right: false,\r\n    });\r\n\r\n    const toggleDrawer = (anchor, open) => (event) => {\r\n        if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n            return;\r\n        }\r\n        setState({ ...state, [anchor]: open });\r\n    };\r\n\r\n    const list = (anchor) => (\r\n        <div\r\n            className={clsx(classes.list)}\r\n            role=\"presentation\"\r\n            onClick={toggleDrawer(anchor, false)}\r\n            onKeyDown={toggleDrawer(anchor, false)}\r\n        >\r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n                <div className='mt-5'>\r\n                    <Slider\r\n                        valueLabelDisplay=\"auto\"\r\n                        aria-labelledby=\"range-slider\"\r\n                        min={1}\r\n                        max={1200}\r\n                        defaultValue={[1, 1200]}\r\n                        // getAriaValueText={{'hi':'d'}}\r\n                        value={price}\r\n                        marks={[\r\n                            {\r\n                                value: 1, label: '$1'\r\n                            },\r\n                            {\r\n                                value: 1200, label: '$1200'\r\n                            }\r\n                        ]}\r\n                        onChange={(e, price) => setPrice(price)}\r\n                    />\r\n                </div>\r\n\r\n                <div className='mt-5'>\r\n                    <h4 className='mb-3'>Categories</h4>\r\n                    <ul className='pl-0'>\r\n                        {\r\n                            cattegories.map(category => (\r\n                                <li key={category}\r\n                                    className='category_filter'\r\n                                    style={{ listStyle: 'none', cursor: 'pointer' }}\r\n                                    onClick={() => setCategory(category)}\r\n                                >\r\n                                    {category}\r\n                                </li>\r\n                            ))\r\n                        }\r\n                    </ul>\r\n                </div>\r\n\r\n                <div className='mt-5 pb-5'>\r\n                    <h4 className='mb-3'>Ratings</h4>\r\n                    <ul className='pl-0'>\r\n                        {\r\n                            [5, 4, 3, 2, 1].map(stars => (\r\n                                <li key={stars}\r\n                                    style={{ listStyle: 'none', cursor: 'pointer' }}\r\n                                    onClick={() => setRating(stars)}\r\n                                >\r\n                                    <div className=\"rating-outer\">\r\n                                        <div className=\"rating-inner\"\r\n                                            style={{\r\n                                                width: `${stars * 20}%`\r\n                                            }}\r\n                                        >\r\n                                        </div>\r\n                                    </div>\r\n                                </li>\r\n                            ))\r\n                        }\r\n                    </ul>\r\n                </div>\r\n            </Container>\r\n\r\n        </div>\r\n    );\r\n    //material ui\r\n\r\n    let alert = useAlert();\r\n    const dispatch = useDispatch();\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [price, setPrice] = useState([1, 1200]);\r\n    const [category, setCategory] = useState('');\r\n    const [rating, setRating] = useState(0);\r\n\r\n    const cattegories = [\r\n        'Electronics',\r\n        'Home',\r\n        'Laptop',\r\n        'Cameras',\r\n        'Accessories',\r\n        \"Headphones\",\r\n        'Foods',\r\n        'Clothes/Shoes',\r\n        'Beauty/Health',\r\n        'Sports',\r\n        'Outdoor'\r\n    ];\r\n\r\n    // pull prod from states\r\n    const {\r\n        loading,\r\n        error,\r\n        products,\r\n        productsCount,\r\n        resPerPage,\r\n        filteredProductCount\r\n    } = useSelector(state => state.products)\r\n\r\n    const keyword = match.params.keyword;\r\n\r\n    useEffect(() => {\r\n        if (error) {\r\n            return alert.error(error);\r\n        }\r\n\r\n        dispatch(getProducts(keyword, currentPage, price, category, rating));\r\n\r\n    }, [dispatch, alert, error, currentPage, keyword, price, category, rating]);\r\n\r\n    function setCurrentPageNo(pageNumber) {\r\n        setCurrentPage(pageNumber);\r\n    }\r\n\r\n    let count = productsCount;\r\n    // if there is keyword on search and after filter (handle pagination on search page)\r\n    if (keyword) {\r\n        count = filteredProductCount\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <Header />\r\n            {!keyword && <Banner/> }\r\n            \r\n            <div className=\"container container-fluid\">\r\n                {loading ? <Loader /> :\r\n                    <Fragment>\r\n                        <MetaData title={'Buy Online Best Products'} />\r\n                        <h1 id=\"products_heading\">Latest Products</h1>\r\n\r\n                        <section>\r\n                            {['left'].map((anchor) => (\r\n                                <Fragment key={anchor}>\r\n                                    {keyword ?\r\n                                        <Fragment>\r\n                                            <div className='d-flex justify-content-between'>\r\n                                                <IconButton>\r\n                                                    <KeyboardTabIcon fontSize=\"large\" />\r\n                                                </IconButton>\r\n                                                <div>\r\n                                                    <Fab\r\n                                                        variant=\"extended\"\r\n                                                        color=\"secondary\"\r\n                                                        aria-label=\"filter\"\r\n                                                        onClick={toggleDrawer(anchor, true)}\r\n                                                        className={classes.margin}>\r\n                                                        <FilterListIcon className={classes.extendedIcon} />\r\n                                                    Filter\r\n                                                </Fab>\r\n                                                    <Drawer anchor={anchor} open={state[anchor]} onClose={toggleDrawer(anchor, false)}>\r\n                                                        {list(anchor)}\r\n                                                    </Drawer>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className='row d-flex justify-content-center'>\r\n                                                {\r\n                                                    products && products.map(items => (\r\n                                                        <Products key={items._id} product={items} col={3} />\r\n                                                    ))\r\n                                                }\r\n                                            </div>\r\n\r\n                                        </Fragment>\r\n                                        : (\r\n                                            // default home page products\r\n                                            <div className='row d-flex justify-content-center'>\r\n                                                {\r\n                                                    products && products.map(items => (\r\n                                                        <Products key={items._id} product={items} col={3} />\r\n                                                    ))\r\n                                                }\r\n                                            </div>                                            \r\n                                        )\r\n                                    }\r\n\r\n                                </Fragment>\r\n                            ))}\r\n                        </section>\r\n\r\n\r\n                        {/* if only 4 resperpage and  2 products count in DB then it will not show pagination*/}\r\n                        {resPerPage <= count && (\r\n                            <div className='d-flex justify-content-center mt-5'>\r\n                                <Pagination\r\n                                    activePage={currentPage}\r\n                                    itemsCountPerPage={resPerPage}\r\n                                    totalItemsCount={productsCount}\r\n                                    onChange={setCurrentPageNo}\r\n                                    nextPageText='Next'\r\n                                    prevPageText='Prev'\r\n                                    firstPageText='First'\r\n                                    lastPageText='Last'\r\n                                    itemClass='page-item'\r\n                                    linkClass='page-link'\r\n                                />\r\n                            </div>\r\n                        )}\r\n                    </Fragment>\r\n                }\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\n\r\nconst ListReviews = ({ reviews }) => {\r\n    return (\r\n        <div className=\"reviews w-75\">\r\n            <h3>Other's Reviews:</h3>\r\n            <hr />\r\n            {reviews && reviews.map(review => (\r\n                <div key={review._id} className=\"review-card my-3\">\r\n                    <div className=\"rating-outer\">\r\n                        <div className=\"rating-inner\" style={{ width: `${(review.rating / 5) * 100}%` }}></div>\r\n                    </div>\r\n                    <p className=\"review_user\">by {review.name}</p>\r\n                    <p className=\"review_comment\">{review.comment}</p>\r\n\r\n                    <hr />\r\n                </div>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ListReviews\r\n","export const ADD_TO_CART = 'ADD_TO_CART';\r\nexport const REMOVE_CART_ITEM = 'REMOVE_CART_ITEM';\r\nexport const SAVE_SHIPPING_INFO = 'SAVE_SHIPPING_INFO';\r\n\r\n","import axios from 'axios';\r\nimport { ADD_TO_CART, REMOVE_CART_ITEM,SAVE_SHIPPING_INFO } from '../constants/cartConstants';\r\n\r\nexport const addItemsToCart = (id, quantity) => async (dispatch, getState) => {\r\n    // searchProduct with id\r\n    const { data } = await axios.get(`/api/v1/product/${id}`)\r\n\r\n    dispatch({\r\n        type: ADD_TO_CART,\r\n        payload: {\r\n            product: data.product._id,\r\n            name: data.product.name,\r\n            price: data.product.price,\r\n            image: data.product.images[0].url,\r\n            stock: data.product.stock,\r\n            quantity\r\n        }\r\n    })\r\n\r\n    // save items from cart to localStorage, to prevent from disappea from cart after refreshing page\r\n    // convert cartItems from JSON to String\r\n    // getState will return whatever in current state\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const removeItemsFromCart = (id) => async (dispatch, getState) => {\r\n\r\n    dispatch({\r\n        type: REMOVE_CART_ITEM,\r\n        payload: id\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const saveShippingInfo = (data) => async (dispatch) => {\r\n\r\n    dispatch({\r\n        type: SAVE_SHIPPING_INFO,\r\n        payload: data\r\n    })\r\n\r\n    localStorage.setItem('shippingInfo', JSON.stringify(data))\r\n}","import React, { Fragment, useState, useEffect } from 'react';\r\nimport MetaData from '../Layouts/MetaData';\r\nimport ListReviews from '../review/ListReviews';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getProductDetails, clearError, newReview } from '../../actions/productActions';\r\nimport Loader from '../Layouts/Loader';\r\nimport { useAlert } from 'react-alert';\r\nimport { Carousel } from 'react-bootstrap';\r\nimport { addItemsToCart } from '../../actions/cartAction';\r\nimport { NEW_REVIEW_RESET } from '../../constants/productConstants';\r\nimport Header from '../Layouts/Header';\r\n\r\nconst ProductDetails = ({ match }) => {\r\n    const [qty, setQty] = useState(1);\r\n    const dispatch = useDispatch();\r\n    const alert = useAlert();\r\n    const { loading, error, product } = useSelector(state => state.productDetails);\r\n    const { user } = useSelector(state => state.auth);\r\n    const { error: reviewError, success } = useSelector(state => state.newReview);\r\n\r\n    const [rating, setRating] = useState(0);\r\n    const [comment, setComment] = useState('');\r\n\r\n    useEffect(() => {\r\n        dispatch(getProductDetails(match.params.id))\r\n\r\n        if (error) {\r\n            alert.error(error)\r\n            dispatch(clearError());\r\n        }\r\n        if (reviewError) {\r\n            alert.error(reviewError)\r\n            dispatch(clearError());\r\n        }\r\n\r\n        if (success) {\r\n            alert.success(\"Review Posted Successfully!\")\r\n            dispatch({ type: NEW_REVIEW_RESET })\r\n        }\r\n\r\n    }, [dispatch, alert, error, match.params.id, reviewError, success])//if change any of the dependencies we have to load data\r\n\r\n    const increaseQuantity = () => {\r\n        const count = document.querySelector('.count');\r\n        if (count.valueAsNumber >= product.stock) return;\r\n        const qauntity = count.valueAsNumber + 1;\r\n        setQty(qauntity);\r\n    }\r\n\r\n    const decreaseQuantity = () => {\r\n        const count = document.querySelector('.count');\r\n        if (count.valueAsNumber <= 1) return;\r\n        const qauntity = count.valueAsNumber - 1;\r\n        setQty(qauntity);\r\n    }\r\n\r\n    const addToCart = () => {\r\n        dispatch(addItemsToCart(match.params.id, qty));\r\n        alert.success('Items Added To Cart')\r\n    }\r\n\r\n    function setUserRatings() {\r\n        const stars = document.querySelectorAll('.star');\r\n        stars.forEach((star, index) => {\r\n            // setting starValue as attribut\r\n            star.starValue = index + 1;\r\n            ['click', 'mouseover', 'mouseout'].forEach(function (e) {\r\n                star.addEventListener(e, showRatings);\r\n            })\r\n        })\r\n        function showRatings(e) {\r\n            stars.forEach((star, index) => {\r\n                if (e.type === 'click') {\r\n                    if (index < this.starValue) {\r\n                        star.classList.add('darkPink');\r\n                        setRating(this.starValue);\r\n                    } else {\r\n                        star.classList.remove('darkPink')\r\n                    }\r\n                }\r\n\r\n                if (e.type === 'mouseover') {\r\n                    if (index < this.starValue) {\r\n                        star.classList.add('lightPink')\r\n                    } else {\r\n                        star.classList.remove('lightPink')\r\n                    }\r\n                }\r\n\r\n                if (e.type === 'mouseout') {\r\n                    star.classList.remove('lightPink')\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    const reviewHandler = () => {\r\n        const formData = new FormData();\r\n\r\n        // set first parameter in formData.set() as you have defined in model and controller on backend        \r\n        formData.set('rating', rating);\r\n        formData.set('comment', comment);\r\n        formData.set('productId', match.params.id);\r\n\r\n        dispatch(newReview(formData));\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <Header />\r\n            <div className=\"container container-fluid\">\r\n                {loading ? <Loader /> :\r\n                    (\r\n                        <Fragment>\r\n                            <MetaData title={product.name} />\r\n\r\n                            <div className=\"row f-flex justify-content-around\">\r\n                                <div className=\"col-12 col-lg-5 img-fluid\" id=\"product_image\">\r\n                                    <Carousel pause='hover'>\r\n                                        {product.images && product.images.map(img => (\r\n                                            <Carousel.Item key={img.public_id}>\r\n                                                <img className='d-block w-100' src={img.url} alt={product.name} />\r\n                                            </Carousel.Item>\r\n                                        ))}\r\n                                    </Carousel>\r\n                                </div>\r\n\r\n                                <div className=\"col-12 col-lg-5 mt-5\">\r\n                                    <h3>{product.name}</h3>\r\n                                    <p id=\"product_id\">Product # {product._id}</p>\r\n\r\n                                    <hr />\r\n\r\n                                    <div className=\"rating-outer\">\r\n                                        <div className=\"rating-inner\"\r\n                                            style={{ width: `${(product.ratings / 5) * 100}%` }}></div>\r\n                                    </div>\r\n                                    <span id=\"no_of_reviews\">({product.numOfReviews} Reviews)</span>\r\n\r\n                                    <hr />\r\n\r\n                                    <p id=\"product_price\">${product.price}</p>\r\n                                    <div className=\"stockCounter d-inline\">\r\n                                        <span className=\"btn btn-danger minus\" onClick={decreaseQuantity}>-</span>\r\n\r\n                                        <input type=\"number\" className=\"form-control count d-inline\" value={qty} readOnly />\r\n\r\n                                        <span className=\"btn btn-primary plus\" onClick={increaseQuantity}>+</span>\r\n                                    </div>\r\n                                    <button type=\"button\"\r\n                                        id=\"cart_btn\"\r\n                                        onClick={addToCart}\r\n                                        disabled={product.stock === 0}\r\n                                        className=\"btn btn-primary d-inline ml-4\">Add to Cart</button>\r\n\r\n                                    <hr />\r\n\r\n                                    <p>Status: <span id=\"stock_status\" className={product.stock > 0 ? 'greenColor' : 'redColor'}>{product.stock > 0 ? 'In Stock' : 'Out Of Stock'}</span></p>\r\n\r\n                                    <hr />\r\n\r\n                                    <h4 className=\"mt-2\">Description:</h4>\r\n                                    <p>{product.description}</p>\r\n                                    <hr />\r\n                                    <p id=\"product_seller mb-3\">Sold by: <strong>{product.seller}</strong></p>\r\n\r\n                                    {user ? <button id=\"review_btn\"\r\n                                        type=\"button\"\r\n                                        className=\"btn btn-primary mt-4\"\r\n                                        data-toggle=\"modal\"\r\n                                        data-target=\"#ratingModal\"\r\n                                        onClick={setUserRatings}>\r\n                                        Submit Your Review\r\n                                </button> :\r\n                                        <div className='alert alert-danger mt-5' type='alert'>Login To Post Your Review</div>\r\n                                    }\r\n\r\n                                    <div className=\"row mt-2 mb-5\">\r\n                                        <div className=\"rating w-50\">\r\n\r\n                                            <div className=\"modal fade\" id=\"ratingModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"ratingModalLabel\" aria-hidden=\"true\">\r\n                                                <div className=\"modal-dialog\" role=\"document\">\r\n                                                    <div className=\"modal-content\">\r\n                                                        <div className=\"modal-header\">\r\n                                                            <h5 className=\"modal-title\" id=\"ratingModalLabel\">Submit Review</h5>\r\n                                                            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                                                <span aria-hidden=\"true\">&times;</span>\r\n                                                            </button>\r\n                                                        </div>\r\n                                                        <div className=\"modal-body\">\r\n\r\n                                                            <ul className=\"stars\" >\r\n                                                                <li className=\"star\"><i className=\"fa fa-star\"></i></li>\r\n                                                                <li className=\"star\"><i className=\"fa fa-star\"></i></li>\r\n                                                                <li className=\"star\"><i className=\"fa fa-star\"></i></li>\r\n                                                                <li className=\"star\"><i className=\"fa fa-star\"></i></li>\r\n                                                                <li className=\"star\"><i className=\"fa fa-star\"></i></li>\r\n                                                            </ul>\r\n\r\n                                                            <textarea\r\n                                                                name=\"review\"\r\n                                                                id=\"review\"\r\n                                                                value={comment}\r\n                                                                onChange={(e) => setComment(e.target.value)}\r\n                                                                className=\"form-control mt-3\">\r\n\r\n                                                            </textarea>\r\n\r\n                                                            <button\r\n                                                                className=\"btn my-3 float-right review-btn px-4 text-white\"\r\n                                                                data-dismiss=\"modal\"\r\n                                                                onClick={reviewHandler}\r\n                                                                aria-label=\"Close\">Submit</button>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            {product.reviews && product.reviews.length > 0 && (\r\n                                <ListReviews reviews={product.reviews} />\r\n                            )}\r\n                        </Fragment>\r\n                    )\r\n                }\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ProductDetails\r\n","// reduce use to combine/reduce multiple value to single.\r\nimport React, { Fragment } from 'react';\r\nimport MetaData from '../Layouts/MetaData';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addItemsToCart, removeItemsFromCart } from '../../actions/cartAction';\r\nimport { Link } from 'react-router-dom'\r\nimport Header from '../Layouts/Header';\r\n\r\nconst Cart = ({ history }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const removeCartHandler = (id) => {\r\n        dispatch(removeItemsFromCart(id))\r\n    }\r\n\r\n    const { cartItems } = useSelector(state => state.cart);\r\n\r\n    const increaseQuantity = (id, quantity, stock) => {\r\n        const newQty = quantity + 1;\r\n        if (newQty > stock) return;\r\n        dispatch(addItemsToCart(id, newQty));\r\n    }\r\n\r\n    const decreaseQuantity = (id, quantity) => {\r\n        const newQty = quantity - 1;\r\n        if (newQty < 1) return;\r\n        dispatch(addItemsToCart(id, newQty));\r\n    }\r\n\r\n    const checkOutHandler = () => {\r\n        // if user is not login, login him/her and then redirect to shipping page\r\n        // check login component [redirect]\r\n        history.push('/login?redirect=shipping')\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <Header />\r\n            <div className=\"container container-fluid\">\r\n                {cartItems.length === 0 ?\r\n                    <h2 className='mt-5'>Your Cart Is Empty</h2> :\r\n                    (\r\n                        <Fragment>\r\n                            <MetaData title={'Your Cart'} />\r\n                            <h2 className=\"mt-5\">Your Cart: <b>{cartItems.length} items</b></h2>\r\n\r\n                            <div className=\"row d-flex justify-content-between\">\r\n                                <div className=\"col-12 col-lg-8 col-md-12\">\r\n                                    {cartItems.map(item => (\r\n                                        <Fragment>\r\n                                            <hr />\r\n                                            <div className=\"cart-item\" key={item}>\r\n                                                <div className=\"row\">\r\n                                                    <div className=\"col-12 col-md-4 col-lg-3\">\r\n                                                        <img src={item.image} alt={item.name} height=\"90\" width=\"115\" />\r\n                                                    </div>\r\n\r\n                                                    <div className=\"col-12 col-md-4 col-lg-4 mt-4 mt-lg-0\">\r\n                                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                    </div>\r\n\r\n                                                    <div className=\"col-12 col-md-4 col-lg-2 mt-4 mt-lg-0\">\r\n                                                        <p id=\"card_item_price\">${item.price}</p>\r\n                                                    </div>\r\n\r\n\r\n                                                    <div className='col-12 col-md-12 col-lg-3 d-flex justify-content-between'>\r\n\r\n                                                        <div className=\"mt-4 mt-lg-0\">\r\n                                                            <div className=\"stockCounter d-inline\">\r\n                                                                <span\r\n                                                                    className=\"btn btn-danger minus\"\r\n                                                                    onClick={() => decreaseQuantity(item.product, item.quantity)}\r\n                                                                >-</span>\r\n                                                                <input type=\"number\" className=\"form-control count d-inline\" value={item.quantity} readOnly />\r\n                                                                <span\r\n                                                                    className=\"btn btn-primary plus\"\r\n                                                                    onClick={() => increaseQuantity(item.product, item.quantity, item.stock)}\r\n                                                                >+</span>\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                        <div className=\"mt-4 mt-lg-0\">\r\n                                                            <i\r\n                                                                id=\"delete_cart_item\"\r\n                                                                onClick={() => removeCartHandler(item.product)}\r\n                                                                className=\"fa fa-trash btn btn-danger\">\r\n                                                            </i>\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                        </Fragment>\r\n                                    ))}\r\n\r\n                                    <hr />\r\n                                </div>\r\n\r\n                                <div className=\"col-12 col-md-12 col-lg-3 my-4\">\r\n                                    <div id=\"order_summary\">\r\n                                        <h4>Order Summary</h4>\r\n                                        <hr />\r\n                                        <p>Subtotal:\r\n                                         <span className=\"order-summary-values\">\r\n                                                {cartItems.reduce((acc, items) => (acc + Number(items.quantity)), 0)}\r\n                                             (Units)</span></p>\r\n                                        <p>Est. total:\r\n                                         <span className=\"order-summary-values\">\r\n                                                ${cartItems.reduce((acc, items) => (acc + Number(items.price) * Number(items.quantity)), 0).toFixed(2)}\r\n                                            </span></p>\r\n\r\n                                        <hr />\r\n                                        <button id=\"checkout_btn\"\r\n                                            onClick={checkOutHandler}\r\n                                            className=\"btn btn-primary btn-block\">Check out</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </Fragment>\r\n                    )}\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Cart\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst CheckOutSteps = ({ shipping, confirm, payment }) => {\r\n    return (\r\n        <div className='checkout-progress d-flex justify-content-center mt-5'>\r\n            {shipping ? <Link to='/shipping' className='float-right'>\r\n                <div className='triangle2-active'></div>\r\n                <div className='step active-step'>Shipping</div>\r\n                <div className='triangle-active'></div>\r\n            </Link>\r\n                :\r\n                <Link to='#!' disabled>\r\n                    <div className='triangle2-incomplete'></div>\r\n                    <div className='step incomplete'>Shipping</div>\r\n                    <div className='triangle-incomplete'></div>\r\n                </Link>\r\n            }\r\n             {confirm ? <Link to='/order/confirm' className='float-right'>\r\n                <div className='triangle2-active'></div>\r\n                <div className='step active-step'>Confirm Order</div>\r\n                <div className='triangle-active'></div>\r\n            </Link>\r\n                :\r\n                <Link to='#!' disabled>\r\n                    <div className='triangle2-incomplete'></div>\r\n                    <div className='step incomplete'>Confirm Order</div>\r\n                    <div className='triangle-incomplete'></div>\r\n                </Link>\r\n            }\r\n             {payment ? <Link to='/payment' className='float-right'>\r\n                <div className='triangle2-active'></div>\r\n                <div className='step active-step'>Payment</div>\r\n                <div className='triangle-active'></div>\r\n            </Link>\r\n                :\r\n                <Link to='#!' disabled>\r\n                    <div className='triangle2-incomplete'></div>\r\n                    <div className='step incomplete'>Payment</div>\r\n                    <div className='triangle-incomplete'></div>\r\n                </Link>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CheckOutSteps\r\n","import React, { Fragment, useState } from 'react';\r\nimport MetaData from '../Layouts/MetaData';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { saveShippingInfo } from '../../actions/cartAction';\r\nimport { countries } from 'countries-list';\r\nimport CheckOutSteps from './CheckOutSteps';\r\nimport Header from '../Layouts/Header';\r\n\r\nconst ShippingInfo = ({ history }) => {\r\n    // us:{\r\n    //     name:'United States'\r\n    //     .\r\n    //     .\r\n    // }\r\n    const countriesList = Object.values(countries);\r\n\r\n    const dispatch = useDispatch();\r\n    const { shippingInfo } = useSelector(state => state.cart);\r\n\r\n    const [address, setAddress] = useState(shippingInfo.address);\r\n    const [city, setCity] = useState(shippingInfo.city);\r\n    const [phoneNo, setPhoneNo] = useState(shippingInfo.phoneNo);\r\n    const [postalCode, setPostalCode] = useState(shippingInfo.postalCode);\r\n    const [country, setCountry] = useState(shippingInfo.country);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(saveShippingInfo({ address, city, phoneNo, postalCode, country }));\r\n        history.push('/order/confirm');\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <Header />\r\n            <div className=\"container container-fluid\">\r\n                <MetaData title={'Shipping Info'} />\r\n                <CheckOutSteps shipping />\r\n\r\n                <div className=\"row wrapper\">\r\n                    <div className=\"col-10 col-lg-5\">\r\n                        <form className=\"shadow-lg\" onSubmit={submitHandler}>\r\n                            <h1 className=\"mb-4\">Shipping Info</h1>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"address_field\">Address</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    id=\"address_field\"\r\n                                    className=\"form-control\"\r\n                                    value={address}\r\n                                    onChange={(e) => setAddress(e.target.value)}\r\n                                    required\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"city_field\">City</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    id=\"city_field\"\r\n                                    className=\"form-control\"\r\n                                    value={city}\r\n                                    onChange={(e) => setCity(e.target.value)}\r\n                                    required\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"phone_field\">Phone No</label>\r\n                                <input\r\n                                    type=\"phone\"\r\n                                    id=\"phone_field\"\r\n                                    className=\"form-control\"\r\n                                    value={phoneNo}\r\n                                    onChange={(e) => setPhoneNo(e.target.value)}\r\n                                    required\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"postal_code_field\">Postal Code</label>\r\n                                <input\r\n                                    type=\"number\"\r\n                                    id=\"postal_code_field\"\r\n                                    className=\"form-control\"\r\n                                    value={postalCode}\r\n                                    onChange={(e) => setPostalCode(e.target.value)}\r\n                                    required\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"country_field\">Country</label>\r\n                                <select\r\n                                    id=\"country_field\"\r\n                                    className=\"form-control\"\r\n                                    value={country}\r\n                                    onChange={(e) => setCountry(e.target.value)}\r\n                                    required\r\n                                >\r\n                                    {countriesList.map(country => (\r\n                                        <option value={country.name} key={country.name}>\r\n                                            {country.name}\r\n                                        </option>\r\n                                    ))}\r\n                                </select>\r\n                            </div>\r\n\r\n                            <button\r\n                                id=\"shipping_btn\"\r\n                                type=\"submit\"\r\n                                className=\"btn btn-block py-3\"\r\n                            >\r\n                                CONTINUE\r\n                            </button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ShippingInfo\r\n","import React, { Fragment } from 'react';\r\nimport MetaData from '../Layouts/MetaData';\r\nimport { useSelector } from 'react-redux';\r\nimport CheckOutSteps from './CheckOutSteps';\r\nimport { Link } from 'react-router-dom';\r\nimport Header from '../Layouts/Header';\r\n\r\nconst ConfirmOrder = ({ history }) => {\r\n    const { user } = useSelector(state => state.auth);\r\n    const { shippingInfo, cartItems } = useSelector(state => state.cart);\r\n\r\n    //calculate order price\r\n    const itemPrice = cartItems.reduce((acc, items) => acc + items.price * items.quantity, 0);\r\n\r\n    // if item price is < 200 then add shipping price 25\r\n    const shippingPrice = itemPrice > 200 ? 0 : 25;\r\n    const taxPrice = Number((0.05 * itemPrice).toFixed(2));\r\n    const totalPrice = (itemPrice + shippingPrice + taxPrice).toFixed(2);\r\n\r\n    const processToPayment = () => {\r\n        const data = {\r\n            itemPrice: itemPrice.toFixed(2),\r\n            shippingPrice,\r\n            taxPrice,\r\n            totalPrice\r\n        }\r\n        // adding it to sessionStorage because when user put new order after payment\r\n        // we can pull data from sessionStorage so we don't need to calculate this Prices again\r\n        sessionStorage.setItem('orderInfo', JSON.stringify(data))\r\n        history.push('/payment');\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n             <Header />\r\n             <div className=\"container container-fluid\">\r\n            <MetaData title={'Confirm Order'} />\r\n            <CheckOutSteps shipping confirm/>\r\n            <div className=\"row d-flex justify-content-between\">\r\n                <div className=\"col-12 col-lg-8 mt-5 order-confirm\">\r\n\r\n                    <h4 className=\"mb-3\">Shipping Info</h4>\r\n                    <p><b>Name:</b> {user.name}</p>\r\n                    <p><b>Phone:</b> {shippingInfo.phoneNo}</p>\r\n                    <p className=\"mb-4\"><b>Address:</b> {`${shippingInfo.address}, ${shippingInfo.city}, ${shippingInfo.postalCode}, ${shippingInfo.country}`}</p>\r\n\r\n                    <hr />\r\n                    <h4 className=\"mt-4\">Your Cart Items:</h4>\r\n                    {cartItems.map(item => (\r\n                        <Fragment>\r\n                            <hr />\r\n                            <div className=\"cart-item my-1\" key={item.product}>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-3 col-lg-2 col-md-3\">\r\n                                        <img src={item.image} alt={item.name} height=\"60\" width=\"70\" />\r\n                                    </div>\r\n\r\n                                    <div className=\"col-5 col-lg-5 col-md-5\">\r\n                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-4 col-lg-5 col-md-4\">\r\n                                        <p>{item.quantity} x ${item.price} = <b>${(item.quantity * item.price).toFixed(2)}</b></p>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                            <hr />\r\n                        </Fragment>\r\n                    ))}\r\n\r\n                </div>\r\n\r\n                <div className=\"col-12 col-lg-3 my-4\">\r\n                    <div id=\"order_summary\">\r\n                        <h4>Order Summary</h4>\r\n                        <hr />\r\n                        <p>Subtotal:  <span className=\"order-summary-values\">${itemPrice}</span></p>\r\n                        <p>Shipping: <span className=\"order-summary-values\">${shippingPrice}</span></p>\r\n                        <p>Tax:  <span className=\"order-summary-values\">${taxPrice}</span></p>\r\n\r\n                        <hr />\r\n\r\n                        <p>Total: <span className=\"order-summary-values\">${totalPrice}</span></p>\r\n\r\n                        <hr />\r\n                        <button id=\"checkout_btn\"\r\n                            onClick={processToPayment}\r\n                            className=\"btn btn-primary btn-block\">Proceed to Payment</button>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ConfirmOrder\r\n","export const CREATE_ORDER_REQUEST = 'CREATE_ORDER_REQUEST';\r\nexport const CREATE_ORDER_SUCCESS = 'CREATE_ORDER_SUCCESS';\r\nexport const CREATE_ORDER_FAIL = 'CREATE_ORDER_FAIL';\r\n\r\nexport const MY_ORDERS_REQUEST = 'MY_ORDERS_REQUEST';\r\nexport const MY_ORDERS_SUCCESS = 'MY_ORDERS_SUCCESS';\r\nexport const MY_ORDERS_FAIL = 'MY_ORDERS_FAIL';\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST';\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS';\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL';\r\n\r\nexport const ALL_ORDERS_REQUEST = 'ALL_ORDERS_REQUEST';\r\nexport const ALL_ORDERS_SUCCESS = 'ALL_ORDERS_SUCCESS';\r\nexport const ALL_ORDERS_FAIL = 'ALL_ORDERS_FAIL';\r\n\r\nexport const UPDATE_ORDER_REQUEST = 'UPDATE_ORDER_REQUEST';\r\nexport const UPDATE_ORDER_SUCCESS = 'UPDATE_ORDER_SUCCESS';\r\nexport const UPDATE_ORDER_FAIL = 'UPDATE_ORDER_FAIL';\r\nexport const UPDATE_ORDER_RESET = 'UPDATE_ORDER_RESET';\r\n\r\nexport const DELETE_ORDER_REQUEST = 'DELETE_ORDER_REQUEST';\r\nexport const DELETE_ORDER_SUCCESS = 'DELETE_ORDER_SUCCESS';\r\nexport const DELETE_ORDER_FAIL = 'DELETE_ORDER_FAIL';\r\nexport const DELETE_ORDER_RESET = 'DELETE_ORDER_RESET';\r\n\r\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS';","import {\r\n    CREATE_ORDER_FAIL,\r\n    CREATE_ORDER_REQUEST,\r\n    CREATE_ORDER_SUCCESS,\r\n    MY_ORDERS_FAIL,\r\n    MY_ORDERS_REQUEST,\r\n    MY_ORDERS_SUCCESS,\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n    ALL_ORDERS_REQUEST,\r\n    ALL_ORDERS_SUCCESS,\r\n    ALL_ORDERS_FAIL,\r\n    UPDATE_ORDER_REQUEST,\r\n    UPDATE_ORDER_SUCCESS,\r\n    UPDATE_ORDER_FAIL,\r\n    DELETE_ORDER_REQUEST,\r\n    DELETE_ORDER_SUCCESS,\r\n    DELETE_ORDER_FAIL,\r\n    CLEAR_ERRORS,    \r\n} from '../constants/orderConstant';\r\n\r\nimport axios from 'axios';\r\n\r\nexport const createOrder = (order) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: CREATE_ORDER_REQUEST })\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        };\r\n\r\n        const { data } = await axios.post('/api/v1/order/new', order, config)\r\n\r\n        dispatch({\r\n            type: CREATE_ORDER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: CREATE_ORDER_FAIL,\r\n            payload: error.response.data.errMessage\r\n        })\r\n    }\r\n}\r\n\r\n// get currently logged user orders\r\nexport const myOrders = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: MY_ORDERS_REQUEST })\r\n        const { data } = await axios.get('/api/v1/orders/me');\r\n\r\n        dispatch({\r\n            type: MY_ORDERS_SUCCESS,\r\n            payload: data.orders\r\n\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: MY_ORDERS_FAIL,\r\n            payload: error.response.data.errMessage\r\n        })\r\n    }\r\n\r\n}\r\n\r\n// get order details\r\nexport const getOrderDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: ORDER_DETAILS_REQUEST })\r\n        const { data } = await axios.get(`/api/v1/order/${id}`);\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data.order\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: error.response.data.errMessage\r\n        })\r\n    }\r\n\r\n}\r\n\r\n// get all orders -ADMIN\r\nexport const allOrders = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: ALL_ORDERS_REQUEST })\r\n        const { data } = await axios.get(`/api/v1/admin/orders`);\r\n\r\n        dispatch({\r\n            type: ALL_ORDERS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ALL_ORDERS_FAIL,\r\n            payload: error.response.data.errMessage\r\n        })\r\n    }\r\n\r\n}\r\n// update order - ADMIN\r\nexport const updateOrder = (id, orderData) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: UPDATE_ORDER_REQUEST })\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        };\r\n\r\n        const { data } = await axios.put(`/api/v1/admin/order/${id}`, orderData, config)\r\n\r\n        dispatch({\r\n            type: UPDATE_ORDER_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: UPDATE_ORDER_FAIL,\r\n            payload: error.response.data.errMessage\r\n        })\r\n    }\r\n}\r\n\r\n// Delete order - ADMIN\r\nexport const deleteOrder = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: DELETE_ORDER_REQUEST })        \r\n\r\n        const { data } = await axios.delete(`/api/v1/admin/order/${id}`)\r\n\r\n        dispatch({\r\n            type: DELETE_ORDER_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: DELETE_ORDER_FAIL,\r\n            payload: error.response.data.errMessage\r\n        })\r\n    }\r\n}\r\n\r\n// clear errors\r\nexport const clearError = () => async (dispatch) => {\r\n    dispatch({\r\n        type: CLEAR_ERRORS\r\n    })\r\n}","import React, { Fragment, useEffect } from 'react';\r\nimport MetaData from '../Layouts/MetaData';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport CheckOutSteps from './CheckOutSteps';\r\nimport { useStripe, useElements, CardNumberElement, CardExpiryElement, CardCvcElement } from '@stripe/react-stripe-js';\r\nimport { useAlert } from 'react-alert'\r\nimport axios from 'axios';\r\nimport { clearError, createOrder } from '../../actions/orderAction';\r\nimport Header from '../Layouts/Header';\r\nimport {\r\n    Avatar, Button, CssBaseline, InputLabel, Grid, Typography, Container, makeStyles\r\n} from '@material-ui/core';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\n\r\nconst options = {\r\n    style: {\r\n        base: {\r\n            fontSize: '16px'\r\n        },\r\n        invalid: {\r\n            color: '#9e2146'\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst Payment = ({ history }) => {\r\n    const classes = useStyles();\r\n\r\n    const { user } = useSelector(state => state.auth);\r\n    const { shippingInfo, cartItems } = useSelector(state => state.cart);\r\n    const { error } = useSelector(state => state.newOrder);\r\n\r\n    const dispatch = useDispatch();\r\n    const Alert = useAlert();\r\n    const stripe = useStripe();\r\n    const elements = useElements();\r\n\r\n    useEffect(() => {\r\n        if (error) {\r\n            Alert.error(error)\r\n            dispatch(clearError())\r\n        }\r\n    }, [dispatch, Alert, error])\r\n\r\n    const order = {\r\n        orderItems: cartItems,\r\n        shippingInfo\r\n    }\r\n\r\n    const orderInfo = JSON.parse(sessionStorage.getItem('orderInfo'));\r\n    // if order info exist then set further details of order\r\n    if (orderInfo) {\r\n        order.itemsPrice = orderInfo.itemPrice\r\n        order.shippingPrice = orderInfo.shippingPrice\r\n        order.taxPrice = orderInfo.taxPrice\r\n        order.totalPrice = orderInfo.totalPrice\r\n    }\r\n\r\n    const paymentData = {\r\n        // we have to send amount in cent thats why *100\r\n        amount: Math.round(orderInfo.totalPrice * 100)\r\n    }\r\n\r\n    const submitHandler = async (e) => {\r\n        e.preventDefault();\r\n        document.querySelector('#pay_btn').disabled = true;\r\n        let res;\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n            res = await axios.post('/api/v1/payment/process', paymentData, config)\r\n\r\n            const clientSecret = res.data.client_secret;\r\n            // stripe and element need to be exist\r\n            if (!stripe || !elements) {\r\n                return;\r\n            }\r\n            const result = await stripe.confirmCardPayment(clientSecret, {\r\n                payment_method: {\r\n                    card: elements.getElement(CardNumberElement),\r\n                    billing_details: {\r\n                        name: user.name,\r\n                        email: user.email\r\n                    }\r\n                }\r\n            });\r\n            if (result.error) {\r\n                Alert.error(result.error.message);\r\n                document.querySelector('#pay_btn').disabled = false;\r\n            }\r\n            else {\r\n                // the payment processed or not\r\n                if (result.paymentIntent.status === 'succeeded') {\r\n\r\n                    order.paymentInfo = {\r\n                        id: result.paymentIntent.id,\r\n                        status: result.paymentIntent.status\r\n                    }\r\n                    dispatch(createOrder(order))\r\n                    console.log('order==>', order);\r\n\r\n                    history.push('/success')\r\n                }\r\n                else {\r\n                    Alert.error(\"There is some issue while payment processing\");\r\n                }\r\n            }\r\n        } catch (error) {\r\n            document.querySelector('#pay_btn').disabled = false;\r\n            Alert.error(error.response.data.errMessage);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <Header />\r\n            <div className=\"container container-fluid\">\r\n                <CheckOutSteps shipping confirm payment />\r\n                <Container component=\"main\" maxWidth=\"xs\">\r\n                    <MetaData title={'Payment'} />\r\n                    <CssBaseline />\r\n                    <div className={classes.paper}>\r\n                        <Avatar className={classes.avatar}>\r\n                            <InfoIcon />\r\n                        </Avatar>\r\n                        <Typography component=\"h1\" variant=\"h5\">\r\n                            Card Info\r\n                    </Typography>\r\n                        <form className={classes.form} onSubmit={submitHandler}>\r\n                            <Grid container spacing={2}>\r\n                                <Grid item xs={12}>\r\n                                    <InputLabel shrink={true}>Card Number</InputLabel>\r\n                                    <CardNumberElement\r\n                                        type=\"text\"\r\n                                        id=\"card_num_field\"\r\n                                        className=\"form-control\"\r\n                                        options={options}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <InputLabel shrink={true}>Card Expiry</InputLabel>\r\n                                    <CardExpiryElement\r\n                                        type=\"text\"\r\n                                        id=\"card_exp_field\"\r\n                                        className=\"form-control\"\r\n                                        options={options}\r\n                                    />\r\n                                </Grid>\r\n\r\n                                <Grid item xs={12}>\r\n                                    <InputLabel shrink={true}>Card CVC</InputLabel>\r\n                                    <CardCvcElement\r\n                                        type=\"text\"\r\n                                        id=\"card_cvc_field\"\r\n                                        className=\"form-control\"\r\n                                        options={options}\r\n                                    />\r\n                                </Grid>\r\n\r\n                            </Grid>\r\n                            <Button\r\n                                type=\"submit\"\r\n                                id=\"pay_btn\"\r\n                                fullWidth\r\n                                variant=\"contained\"\r\n                                color=\"secondary\"\r\n                                className={classes.submit}\r\n                            >\r\n                                Pay {`- $${orderInfo.totalPrice}`}\r\n                            </Button>\r\n                        </form>\r\n                    </div>\r\n                </Container>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Payment\r\n","import React, { Fragment } from 'react';\r\nimport MetaData from '../Layouts/MetaData';\r\nimport { Link } from 'react-router-dom';\r\nimport Header from '../Layouts/Header';\r\n\r\nconst OrderSuccess = () => {\r\n    return (\r\n        <Fragment>\r\n            <Header />\r\n            <div className=\"container container-fluid\">\r\n                <MetaData title={'Order Success'} />\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-6 mt-5 text-center\">\r\n                        <img className=\"my-5 img-fluid d-block mx-auto\"\r\n                            src='/image/confirmation.png'\r\n                            alt=\"Order Success\"\r\n                            width=\"200\"\r\n                            height=\"200\" />\r\n\r\n                        <h2>Your Order has been placed successfully.</h2>\r\n\r\n                        <Link to=\"/orders/me\">Go to Orders</Link>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default OrderSuccess\r\n","import React, { Fragment, useEffect } from 'react';\r\nimport MetaData from '../Layouts/MetaData';\r\nimport Loader from '../Layouts/Loader';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { myOrders, clearError } from '../../actions/orderAction';\r\nimport { Link } from 'react-router-dom';\r\nimport { useAlert } from 'react-alert';\r\nimport { MDBDataTable } from 'mdbreact';\r\nimport Header from '../Layouts/Header';\r\n\r\nconst ListOrders = () => {\r\n    const Alert = useAlert();\r\n    const dispatch = useDispatch();\r\n    const { loading, error, orders } = useSelector(state => state.myOrders)\r\n\r\n    useEffect(() => {\r\n        dispatch(myOrders())\r\n\r\n        if (error) {\r\n            Alert.error(error);\r\n            dispatch(clearError());\r\n        }\r\n\r\n    }, [dispatch, Alert, error])\r\n\r\n    const setOrders = () => {\r\n        const data = {\r\n            columns: [\r\n                {\r\n                    label: 'Order ID',\r\n                    field: 'id',\r\n                    sort: 'asc',\r\n                },\r\n                {\r\n                    label: 'Num Of Items',\r\n                    field: 'numOfItems',\r\n                    sort: 'asc',\r\n                },\r\n                {\r\n                    label: 'Amount',\r\n                    field: 'amount',\r\n                    sort: 'asc',\r\n                },\r\n                {\r\n                    label: 'Status',\r\n                    field: 'status',\r\n                    sort: 'asc',\r\n                },\r\n                {\r\n                    label: 'Actions',\r\n                    field: 'actions',\r\n                    sort: 'asc',\r\n                }\r\n            ],\r\n            rows: []\r\n        };\r\n        orders.forEach(order => {\r\n            data.rows.push({\r\n                id: order._id,\r\n                numOfItems: order.orderItems.length,\r\n                amount: `$${order.totalPrice}`,\r\n                status: order.orderStatus && String(order.orderStatus).includes(\"Delivered\")\r\n                    ? <p style={{ color: 'green' }}>{order.orderStatus}</p>\r\n                    : <p style={{ color: 'red' }}>{order.orderStatus}</p>,\r\n                actions:\r\n                    <Link to={`/order/${order._id}`} className='btn btn-warning'>\r\n                        <i className='fa fa-eye'></i>\r\n                    </Link>\r\n            })\r\n        });\r\n        return data;\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <Header />\r\n            <div className=\"container container-fluid\">\r\n                <MetaData title={'My Orders'} />\r\n                <h1 className='mt-5'>Your Orders</h1>\r\n                {loading ? <Loader /> : (\r\n                    <MDBDataTable\r\n                        data={setOrders()}\r\n                        className='py-3'\r\n                        bordered\r\n                        striped\r\n                        hover\r\n                        responsive\r\n                    />\r\n                )}\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ListOrders\r\n","import React, { Fragment, useState, useEffect } from 'react';\r\nimport MetaData from '../Layouts/MetaData';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { login, clearError } from '../../actions/userAction';\r\nimport Loader from '../Layouts/Loader';\r\nimport { useAlert } from 'react-alert';\r\nimport { Link } from 'react-router-dom';\r\nimport Header from '../Layouts/Header';\r\n\r\nimport {\r\n    Avatar, Button, CssBaseline, TextField, Grid, Typography, Container\r\n} from '@material-ui/core';\r\n\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nconst Login = ({ history, location }) => {\r\n    const dispatch = useDispatch();\r\n    const Alert = useAlert();\r\n\r\n    const { loading, error, isAuthenticated } = useSelector(state => state.auth);\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    useEffect(() => {\r\n        if (isAuthenticated) {\r\n            history.push(redirect)\r\n        }\r\n        if (error) {\r\n            Alert.error(error);\r\n            dispatch(clearError());\r\n        }\r\n\r\n    }, [dispatch, Alert, error, isAuthenticated, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        dispatch(login(email, password))\r\n    }\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Fragment>\r\n            <Header />\r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n                {loading ? <Loader /> : (\r\n                    <Fragment>\r\n                        <MetaData title={'Login'} />\r\n                        <CssBaseline />\r\n                        <div className={classes.paper}>\r\n                            <Avatar className={classes.avatar}>\r\n                                <LockOutlinedIcon />\r\n                            </Avatar>\r\n                            <Typography component=\"h1\" variant=\"h5\">\r\n                                Sign in\r\n                                </Typography>\r\n                            <form className={classes.form} onSubmit={submitHandler}>\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"normal\"\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"email\"\r\n                                    label=\"Email Address\"\r\n                                    name=\"email\"\r\n                                    autoComplete=\"email\"\r\n                                    autoFocus\r\n                                    value={email}\r\n                                    onChange={(e) => setEmail(e.target.value)}\r\n                                />\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"normal\"\r\n                                    required\r\n                                    fullWidth\r\n                                    name=\"password\"\r\n                                    label=\"Password\"\r\n                                    type=\"password\"\r\n                                    id=\"password\"\r\n                                    autoComplete=\"current-password\"\r\n                                    value={password}\r\n                                    onChange={(e) => setPassword(e.target.value)}\r\n                                />\r\n                                <Button\r\n                                    type=\"submit\"\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    color=\"secondary\"\r\n                                    className={classes.submit}\r\n                                >\r\n                                    Sign In\r\n                                    </Button>\r\n                                <Grid container>\r\n                                    <Grid item xs>\r\n                                        <Link to=\"/password/forgot\" >Forgot password?</Link>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Link to=\"/register\">{\"Don't have an account? Sign Up\"}</Link>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </form>\r\n                        </div>\r\n                    </Fragment>\r\n                )}\r\n            </Container>\r\n        </Fragment>\r\n\r\n    );\r\n}\r\nexport default Login","import React, { useState, Fragment, useEffect } from 'react';\r\nimport MetaData from '../Layouts/MetaData';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { register_user, clearError } from '../../actions/userAction';\r\nimport { useAlert } from 'react-alert';\r\nimport { Link } from 'react-router-dom';\r\nimport Header from '../Layouts/Header';\r\n\r\nimport {\r\n    Avatar, Button, CssBaseline, TextField, Grid, Typography, Container, makeStyles\r\n} from '@material-ui/core';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nconst Register = ({ history }) => {\r\n    const classes = useStyles();\r\n\r\n    const [user, setUser] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: ''\r\n    });\r\n    const { name, email, password } = user;\r\n    const [avatar, setAvatar] = useState('');\r\n    const [avatarPreview, setAvatarPreview] = useState('/image/preview.png');\r\n\r\n    const dispatch = useDispatch();\r\n    const alert = useAlert();\r\n\r\n    const { loading, error, isAuthenticated } = useSelector(state => state.auth);\r\n\r\n    useEffect(() => {\r\n        if (isAuthenticated) {\r\n            history.push('/')\r\n        }\r\n        if (error) {\r\n            alert.error(error)\r\n            dispatch(clearError());\r\n        }\r\n\r\n    }, [dispatch, alert, error, isAuthenticated, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        const formData = new FormData();\r\n        formData.set('name', name)\r\n        formData.set('email', email)\r\n        formData.set('password', password)\r\n        formData.set('avatar', avatar)\r\n\r\n        dispatch(register_user(formData))\r\n    }\r\n\r\n    const onChange = e => {\r\n        if (e.target.name === 'avatar') {\r\n            const reader = new FileReader();\r\n\r\n            // when we readAsDataURL() we have to call back this onload()\r\n            reader.onload = () => {\r\n                // 3 types => 0 means reader has created, 1 means that it is inprocessing, \r\n                // 2 means that everything is ready\r\n                if (reader.readyState === 2) {\r\n                    setAvatarPreview(reader.result)\r\n                    setAvatar(reader.result)\r\n                }\r\n            }\r\n\r\n            reader.readAsDataURL(e.target.files[0])\r\n        }\r\n        else {\r\n            setUser({ ...user, [e.target.name]: e.target.value })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <Header />\r\n            <div className=\"container container-fluid\">\r\n                <Container component=\"main\" maxWidth=\"xs\">\r\n                    <MetaData title={'Register User'} />\r\n                    <CssBaseline />\r\n                    <div className={classes.paper}>\r\n                        <Avatar className={classes.avatar}>\r\n                            <LockOutlinedIcon />\r\n                        </Avatar>\r\n                        <Typography component=\"h1\" variant=\"h5\">\r\n                            Sign up\r\n                    </Typography>\r\n                        <form className={classes.form} onSubmit={submitHandler} encType='multipart/form-data'>\r\n                            <Grid container spacing={2}>\r\n                                <Grid item xs={12}>\r\n                                    <TextField\r\n                                        autoComplete=\"fname\"\r\n                                        variant=\"outlined\"\r\n                                        required\r\n                                        fullWidth\r\n                                        id=\"firstName\"\r\n                                        label=\"Name\"\r\n                                        autoFocus\r\n                                        value={name}\r\n                                        onChange={onChange}\r\n                                        name=\"name\"\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <TextField\r\n                                        variant=\"outlined\"\r\n                                        required\r\n                                        fullWidth\r\n                                        id=\"email\"\r\n                                        label=\"Email Address\"\r\n                                        autoComplete=\"email\"\r\n                                        type=\"email\"\r\n                                        value={email}\r\n                                        onChange={onChange}\r\n                                        name=\"email\"\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <TextField\r\n                                        variant=\"outlined\"\r\n                                        required\r\n                                        fullWidth\r\n                                        label=\"Password\"\r\n                                        type=\"password\"\r\n                                        id=\"password\"\r\n                                        autoComplete=\"current-password\"\r\n                                        value={password}\r\n                                        onChange={onChange}\r\n                                        name=\"password\"\r\n                                    />\r\n                                </Grid>\r\n\r\n                                <Grid item xs={12} sm={2}>\r\n                                    <Avatar alt='Avatar Preview' src={avatarPreview} />\r\n                                </Grid>\r\n\r\n                                <Grid item xs={12} sm={10}>\r\n                                    <TextField\r\n                                        variant=\"outlined\"\r\n                                        required\r\n                                        fullWidth\r\n                                        type=\"file\"\r\n                                        id=\"customFile\"\r\n                                        accept=\"images/*\"\r\n                                        name=\"avatar\"\r\n                                        onChange={onChange}\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Button\r\n                                type=\"submit\"\r\n                                fullWidth\r\n                                variant=\"contained\"\r\n                                color=\"secondary\"\r\n                                className={classes.submit}\r\n                                disabled={loading ? true : false}\r\n                            >\r\n                                Sign Up\r\n                            </Button>\r\n                            <Grid container justify=\"flex-end\">\r\n                                <Grid item>\r\n                                    <Link to='/login' variant=\"body2\">\r\n                                        Already have an account? Sign in\r\n                                    </Link>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </form>\r\n                    </div>\r\n                </Container>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default Register","import React, { Fragment } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport Loader from '../Layouts/Loader';\r\nimport MetaData from '../Layouts/MetaData';\r\nimport Header from '../Layouts/Header';\r\n\r\nconst Profile = () => {\r\n    const { loading, user } = useSelector(state => state.auth);\r\n    return (\r\n        <Fragment>\r\n            <Header />\r\n            <div className=\"container container-fluid\">\r\n                {loading ? <Loader /> : (\r\n                    <Fragment>\r\n                        <MetaData title={'Your Profile'} />\r\n                        <h2 class=\"mt-5 ml-5\">My Profile</h2>\r\n                        <div class=\"row justify-content-around mt-5 user-info\">\r\n                            <div class=\"col-12 col-md-6 col-lg-5\">\r\n                                <figure class='avatar avatar-profile'>\r\n                                    <img class=\"rounded-circle img-fluid\" src={user.avatar.url} alt={user.name} />\r\n                                </figure>\r\n                                <Link to=\"/me/update\" id=\"edit_profile\" class=\"btn btn-primary btn-block my-5\">\r\n                                    Edit Profile\r\n                            </Link>\r\n                            </div>\r\n\r\n                            <div class=\"col-12 col-md-6 col-lg-5 offset-lg-2\">\r\n                                <h4>Full Name</h4>\r\n                                <p>{user.name}</p>\r\n\r\n                                <h4>Email Address</h4>\r\n                                <p>{user.email}</p>\r\n\r\n                                <h4>Joined On</h4>\r\n                                <p>{String(user.createdAt).substring(0, 10)}</p>\r\n\r\n                                {user.role !== 'admin' && (\r\n                                    <Link to=\"/orders/me\" class=\"btn btn-danger btn-block mt-5\">\r\n                                        My Orders\r\n                                    </Link>\r\n                                )}\r\n                                <Link to=\"/password/update\" class=\"btn btn-primary btn-block mt-3\">\r\n                                    Change Password\r\n                            </Link>\r\n                            </div>\r\n                        </div>\r\n                    </Fragment>\r\n                )}\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Profile\r\n","import React, { useState,Fragment, useEffect } from 'react';\r\nimport MetaData from '../Layouts/MetaData';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { updateProfile, clearError, load_user } from '../../actions/userAction';\r\nimport { useAlert } from 'react-alert';\r\nimport { UPDATE_PROFILE_RESET } from '../../constants/userConstant'\r\nimport Header from '../Layouts/Header';\r\n\r\nimport {\r\n    Avatar, Button, CssBaseline, TextField, Grid, Typography, Container, makeStyles\r\n} from '@material-ui/core';\r\nimport UpdateIcon from '@material-ui/icons/Update';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nconst UpdateProfile = ({ history }) => {\r\n    const classes = useStyles();\r\n\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [avatar, setAvatar] = useState('');\r\n    const [avatarPreview, setAvatarPreview] = useState('/image/preview.png');\r\n\r\n    const dispatch = useDispatch();\r\n    const alert = useAlert();\r\n\r\n    const { user } = useSelector(state => state.auth);\r\n    const { loading, error, isUpdated } = useSelector(state => state.user);\r\n\r\n    useEffect(() => {\r\n        if (user) {\r\n            setName(user.name);\r\n            setEmail(user.email);\r\n            setAvatarPreview(user.avatar.url);\r\n        }\r\n        if (error) {\r\n            alert.error(error)\r\n            dispatch(clearError());\r\n        }\r\n        if (isUpdated) {\r\n            alert.success('Profile Has Been Updated!')\r\n            // pull fresh/update data\r\n            dispatch(load_user());\r\n\r\n            history.push('/me')\r\n\r\n            dispatch({\r\n                type: UPDATE_PROFILE_RESET\r\n            })\r\n        }\r\n    }, [dispatch, history, alert, error, isUpdated])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        const formData = new FormData();\r\n        formData.set('name', name)\r\n        formData.set('email', email)\r\n        formData.set('avatar', avatar)\r\n\r\n        dispatch(updateProfile(formData))\r\n    }\r\n\r\n    const onChange = e => {\r\n        const reader = new FileReader();\r\n\r\n        reader.onload = () => {\r\n            if (reader.readyState === 2) {\r\n                setAvatarPreview(reader.result)\r\n                setAvatar(reader.result)\r\n            }\r\n        }\r\n        reader.readAsDataURL(e.target.files[0])\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <Header />\r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n                <MetaData title={'Update Profile'} />\r\n                <CssBaseline />\r\n                <div className={classes.paper}>\r\n                    <Avatar className={classes.avatar}>\r\n                        <UpdateIcon />\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        Update Profile\r\n                    </Typography>\r\n                    <form className={classes.form} onSubmit={submitHandler} encType='multipart/form-data'>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    autoComplete=\"fname\"\r\n                                    variant=\"outlined\"\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"name\"\r\n                                    label=\"Name\"\r\n                                    autoFocus\r\n                                    value={name}\r\n                                    name='name'\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"email\"\r\n                                    label=\"Email Address\"\r\n                                    autoComplete=\"email\"\r\n                                    type=\"email\"\r\n                                    value={email}\r\n                                    onChange={(e) => setEmail(e.target.value)}\r\n                                    name=\"email\"\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12} sm={2}>\r\n                                <Avatar alt='Avatar Preview' src={user.avatar.url} />\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12} sm={10}>\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    // required\r\n                                    fullWidth\r\n                                    type=\"file\"\r\n                                    id=\"customFile\"\r\n                                    accept=\"images/*\"\r\n                                    name=\"avatar\"\r\n                                    onChange={onChange}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"secondary\"\r\n                            className={classes.submit}\r\n                            disabled={loading ? true : false}\r\n                        >\r\n                            Update\r\n                            </Button>\r\n                    </form>\r\n                </div>\r\n            </Container>\r\n        </Fragment>\r\n\r\n    )\r\n}\r\n\r\nexport default UpdateProfile\r\n","import React, { useState, Fragment, useEffect } from 'react';\r\nimport MetaData from '../Layouts/MetaData';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { updatePassowrd, clearError } from '../../actions/userAction';\r\nimport { useAlert } from 'react-alert';\r\nimport { UPDATE_PASSWORD_RESET } from '../../constants/userConstant';\r\nimport Header from '../Layouts/Header';\r\n\r\nimport {\r\n    Avatar, Button, CssBaseline, TextField, Grid, Typography, Container, makeStyles\r\n} from '@material-ui/core';\r\nimport UpdateIcon from '@material-ui/icons/Update';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\n\r\nconst UpdatePassword = ({ history }) => {\r\n    const classes = useStyles();\r\n    const [oldPassword, setOldPassword] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const dispatch = useDispatch();\r\n    const alert = useAlert();\r\n\r\n    const { loading, error, isUpdated } = useSelector(state => state.user);\r\n\r\n    useEffect(() => {\r\n\r\n        if (error) {\r\n            alert.error(error)\r\n            dispatch(clearError());\r\n        }\r\n        if (isUpdated) {\r\n            alert.success('Password Has Been Updated!')\r\n\r\n            history.push('/me')\r\n\r\n            dispatch({\r\n                type: UPDATE_PASSWORD_RESET\r\n            })\r\n        }\r\n    }, [dispatch, history, alert, error, isUpdated])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        const formData = new FormData();\r\n        formData.set('oldPassword', oldPassword)\r\n        formData.set('password', password)\r\n\r\n        dispatch(updatePassowrd(formData))\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <Header />\r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n                <MetaData title={'Change Password'} />\r\n                <CssBaseline />\r\n                <div className={classes.paper}>\r\n                    <Avatar className={classes.avatar}>\r\n                        <UpdateIcon />\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        Update Password\r\n                    </Typography>\r\n                    <form className={classes.form} onSubmit={submitHandler}>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"normal\"\r\n                                    required\r\n                                    fullWidth\r\n                                    name=\"password\"\r\n                                    label=\"Old Password\"\r\n                                    type=\"password\"\r\n                                    id=\"old_password_field\"\r\n                                    autoComplete=\"current-password\"\r\n                                    value={oldPassword}\r\n                                    onChange={(e) => setOldPassword(e.target.value)}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"normal\"\r\n                                    required\r\n                                    fullWidth\r\n                                    name=\"password\"\r\n                                    label=\"New Password\"\r\n                                    type=\"password\"\r\n                                    id=\"new_password_field\"\r\n                                    autoComplete=\"current-password\"\r\n                                    value={password}\r\n                                    onChange={(e) => setPassword(e.target.value)}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"secondary\"\r\n                            className={classes.submit}\r\n                            disabled={loading ? true : false}\r\n                        >\r\n                            Update Password\r\n                    </Button>\r\n                    </form>\r\n                </div>\r\n            </Container>\r\n        </Fragment>\r\n\r\n    )\r\n}\r\n\r\nexport default UpdatePassword\r\n","import React, { Fragment, useState, useEffect } from 'react';\r\nimport MetaData from '../Layouts/MetaData';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { forgotPassowrd, clearError } from '../../actions/userAction';\r\nimport { useAlert } from 'react-alert';\r\nimport Header from '../Layouts/Header';\r\nimport {\r\n    Avatar, Button, CssBaseline, makeStyles, TextField, Typography, Container\r\n} from '@material-ui/core';\r\n\r\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nconst ForgotPassword = () => {\r\n    const classes = useStyles();\r\n\r\n    const [email, setEmail] = useState('');\r\n    const dispatch = useDispatch();\r\n    const alert = useAlert();\r\n\r\n    const { loading, error, message } = useSelector(state => state.forogotPassword);\r\n\r\n    useEffect(() => {\r\n\r\n        if (error) {\r\n            alert.error(error)\r\n            dispatch(clearError());\r\n        }\r\n        if (message) {\r\n            alert.success(message)\r\n        }\r\n\r\n    }, [dispatch, message, alert, error])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        const formData = new FormData();\r\n        formData.set('email', email)\r\n\r\n        dispatch(forgotPassowrd(formData))\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <Header />\r\n            <MetaData title={'Forgot Password'} />\r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n                <CssBaseline />\r\n                <div className={classes.paper}>\r\n                    <Avatar className={classes.avatar}>\r\n                        <VisibilityOffIcon />\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        Forgot Password\r\n                            </Typography>\r\n                    <form className={classes.form} onSubmit={submitHandler}>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"email\"\r\n                            label=\"Enter Email Address\"\r\n                            name=\"email\"\r\n                            autoComplete=\"email\"\r\n                            autoFocus\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        />\r\n\r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"secondary\"\r\n                            className={classes.submit}\r\n                            disabled={loading ? true : false}\r\n                        >\r\n                            Send Email\r\n                        </Button>\r\n                    </form>\r\n                </div>\r\n            </Container>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ForgotPassword\r\n","import React, { Fragment, useState, useEffect } from 'react';\r\nimport MetaData from '../Layouts/MetaData';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { resetPassowrd, clearError } from '../../actions/userAction';\r\nimport { useAlert } from 'react-alert';\r\nimport Header from '../Layouts/Header';\r\nimport {\r\n    Avatar, Button, CssBaseline, makeStyles, TextField, Typography, Container\r\n} from '@material-ui/core';\r\n\r\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\n\r\nconst NewPassword = ({ match, history }) => {\r\n    const classes = useStyles();\r\n\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n\r\n    const dispatch = useDispatch();\r\n    const alert = useAlert();\r\n\r\n    const { error, success } = useSelector(state => state.forogotPassword);\r\n\r\n    useEffect(() => {\r\n\r\n        if (error) {\r\n            alert.error(error)\r\n            dispatch(clearError());\r\n        }\r\n        if (success) {\r\n            history.push('/login')\r\n            alert.success('Password Has Been Updated Successfully')\r\n        }\r\n\r\n    }, [dispatch, success, alert, error, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        const formData = new FormData();\r\n        formData.set('password', password)\r\n        formData.set('confirmPassword', confirmPassword)\r\n        // here token if for reset\r\n        dispatch(resetPassowrd(match.params.token, formData))\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <Header />\r\n            <MetaData title={'Reset Password'} />\r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n                <CssBaseline />\r\n                <div className={classes.paper}>\r\n                    <Avatar className={classes.avatar}>\r\n                        <VisibilityOffIcon />\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        New Password\r\n                        </Typography>\r\n                    <form className={classes.form} onSubmit={submitHandler}>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            name=\"password\"\r\n                            label=\"Password\"\r\n                            type=\"password\"\r\n                            id=\"password_field\"\r\n                            autoComplete=\"current-password\"\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        />\r\n\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            name=\"password\"\r\n                            label=\"Confirm Password\"\r\n                            type=\"password\"\r\n                            id=\"confirm_password_field\"\r\n                            value={confirmPassword}\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}\r\n                        />\r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"secondary\"\r\n                            className={classes.submit}\r\n                        >\r\n                            Set Password\r\n                        </Button>\r\n                    </form>\r\n                </div>\r\n            </Container>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default NewPassword\r\n","import React, { Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n\r\nimport {\r\n    makeStyles, Drawer, AppBar, Toolbar, Divider, IconButton, ListSubheader,\r\n    ListItem, ListItemIcon, ListItemText, List,\r\n} from '@material-ui/core';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport StarOutlineIcon from '@material-ui/icons/StarOutline';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    acc_detail: {\r\n        display: 'block'\r\n    },\r\n    acc: {\r\n        backgroundColor: '#0D2F36',\r\n    },\r\n    heading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        fontWeight: theme.typography.fontWeightRegular,\r\n        color: '#fff',\r\n    },\r\n    toolbar: {\r\n        paddingRight: 24, // keep right padding when drawer closed        \r\n    },\r\n    toolbarIcon: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        padding: '0 8px',\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    appBar: {\r\n        backgroundColor: '#0D2F36',\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: 36,\r\n    },\r\n    menuButtonHidden: {\r\n        display: 'none',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    drawerPaper: {\r\n        backgroundColor: '#0D2F36',\r\n        position: 'relative',\r\n        whiteSpace: 'nowrap',\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    drawerPaperClose: {\r\n        overflowX: 'hidden',\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        width: theme.spacing(7),\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: theme.spacing(9),\r\n        },\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        display: 'flex',\r\n        overflow: 'auto',\r\n        flexDirection: 'column',\r\n    },\r\n    icon_color: { color: '#fff', }\r\n}));\r\n\r\nconst Sidebar = () => {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(true);\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n    return (\r\n        <Fragment>\r\n            <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n                <Toolbar className={classes.toolbar}>\r\n                    <IconButton\r\n                        edge=\"start\"\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        onClick={handleDrawerOpen}\r\n                        className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n\r\n                    <div >\r\n                        <Link to='/'>\r\n                            <img src='/image/logo.png' alt='Logo' />\r\n                        </Link>\r\n                    </div>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Drawer\r\n                variant=\"permanent\"\r\n                classes={{\r\n                    paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n                }}\r\n                open={open}\r\n            >\r\n                <div className={classes.toolbarIcon}>\r\n                    <IconButton onClick={handleDrawerClose}>\r\n                        <ChevronLeftIcon className={classes.icon_color} />\r\n                    </IconButton>\r\n                </div>\r\n\r\n                <Divider />\r\n                <div>\r\n                    <List>\r\n                        <Link to=\"/dashboard\">\r\n                            <ListItem button>\r\n                                <ListItemIcon>\r\n                                    <DashboardIcon className={classes.icon_color} />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"Dashboard\" className={classes.icon_color} />\r\n                            </ListItem>\r\n                        </Link>\r\n\r\n                        <Link to=\"/admin/orders\">\r\n                            <ListItem button>\r\n                                <ListItemIcon>\r\n                                    <ShoppingCartIcon className={classes.icon_color} />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"Orders\" className={classes.icon_color} />\r\n                            </ListItem>\r\n                        </Link>\r\n\r\n                        <Link to=\"/admin/users\">\r\n                            <ListItem button>\r\n                                <ListItemIcon>\r\n                                    <PeopleIcon className={classes.icon_color} />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"Users\" className={classes.icon_color} />\r\n                            </ListItem>\r\n                        </Link>\r\n\r\n                        <Link to=\"/admin/reviews\">\r\n                            <ListItem button>\r\n                                <ListItemIcon>\r\n                                    <StarOutlineIcon className={classes.icon_color} />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"Reviews\" className={classes.icon_color} />\r\n                            </ListItem>\r\n                        </Link>\r\n                    </List>\r\n\r\n                    <Divider />\r\n                    <List>\r\n                        <ListSubheader inset className={classes.icon_color} >PRODUCTS</ListSubheader>\r\n\r\n                        <Link to=\"/admin/products\">\r\n                            <ListItem button>\r\n                                <ListItemIcon>\r\n                                    <MenuIcon className={classes.icon_color} />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"All\" className={classes.icon_color} />\r\n                            </ListItem>\r\n                        </Link>\r\n\r\n                        <Link to=\"/admin/product\">\r\n                            <ListItem button>\r\n                                <ListItemIcon>\r\n                                    <AddCircleIcon className={classes.icon_color} />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"Create\" className={classes.icon_color} />\r\n                            </ListItem>\r\n                        </Link>\r\n                    </List>\r\n                </div>\r\n                <Divider />\r\n            </Drawer>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Typography, makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    text_color: { color: '#fff', }\r\n}));\r\n\r\nexport default function Title(props) {\r\n    const classes = useStyles();\r\n    return (\r\n        <Typography component=\"h2\" variant=\"h6\" className={classes.text_color} gutterBottom>\r\n            {props.children}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nTitle.propTypes = {\r\n    children: PropTypes.node,\r\n};","import React, { Fragment, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport MetaData from '../../Layouts/MetaData';\r\nimport Loader from '../../Layouts/Loader';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getAdminProducts } from '../../../actions/productActions';\r\nimport { allOrders } from '../../../actions/orderAction';\r\nimport { allUsers } from '../../../actions/userAction';\r\n\r\nimport Sidebar from './Sidebar';\r\nimport clsx from 'clsx';\r\nimport {\r\n    makeStyles, CssBaseline, Container, Grid, Paper, Typography\r\n} from '@material-ui/core';\r\nimport Title from './Title';\r\n\r\n// import Orders from './Orders';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBarSpacer: theme.mixins.toolbar,\r\n    content: {\r\n        flexGrow: 1,\r\n        height: '100vh',\r\n        overflow: 'auto',\r\n    },\r\n    container: {\r\n        paddingTop: theme.spacing(4),\r\n        paddingBottom: theme.spacing(4),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        display: 'flex',\r\n        overflow: 'auto',\r\n        flexDirection: 'column',\r\n        backgroundColor: '#0D2F36',\r\n        color: '#fff',\r\n        textAlign: 'center',\r\n    },\r\n    fixedHeight: {\r\n        height: 210,\r\n    },\r\n    depositContext: {\r\n        flex: 1,\r\n    },\r\n    text_color: { color: '#fff', }\r\n}));\r\n\r\nexport default function Dashboard() {\r\n    const dispatch = useDispatch();\r\n    const { products } = useSelector(state => state.products);\r\n    const { orders, totalAmount, loading } = useSelector(state => state.allOrders);\r\n    const { users } = useSelector(state => state.allUsers);\r\n\r\n    let outOfStock = 0;\r\n    products.forEach(prod => {\r\n        if (prod.stock == 0) {\r\n            outOfStock += 1;\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        dispatch(getAdminProducts());\r\n        dispatch(allOrders());\r\n        dispatch(allUsers());\r\n\r\n    }, [dispatch])\r\n\r\n    // material ui\r\n    const classes = useStyles();\r\n    const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n    return (\r\n\r\n        <div className={classes.root}>\r\n            <MetaData title={'Admin- Dashboard'} />\r\n            <CssBaseline />\r\n            <Sidebar />\r\n\r\n            <main className={classes.content}>\r\n                <div className={classes.appBarSpacer} />\r\n                {loading ? <Loader /> : (\r\n                    <Container maxWidth=\"lg\" className={classes.container}>\r\n                        <Grid container spacing={3}>\r\n                            <Grid item xs={12} md={4} lg={3}>\r\n                                <Paper className={fixedHeightPaper}>\r\n                                    <Title>Products</Title>\r\n                                    <Typography component=\"p\" variant=\"h4\" className={classes.depositContext}>\r\n                                        {products && products.length}\r\n                                    </Typography>\r\n                                    <div>\r\n                                        <Link className={classes.text_color} to=\"/admin/products\">\r\n                                            View Details\r\n                                    </Link>\r\n                                    </div>\r\n                                </Paper>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12} md={4} lg={3}>\r\n                                <Paper className={fixedHeightPaper}>\r\n                                    <Title>Orders</Title>\r\n                                    <Typography component=\"p\" variant=\"h4\" className={classes.depositContext}>\r\n                                        {orders && orders.length}\r\n                                    </Typography>\r\n\r\n                                    <div>\r\n                                        <Link className={classes.text_color} to=\"/admin/orders\">\r\n                                            View Details\r\n                                    </Link>\r\n                                    </div>\r\n                                </Paper>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12} md={4} lg={3}>\r\n                                <Paper className={fixedHeightPaper}>\r\n                                    <Title>Users</Title>\r\n                                    <Typography component=\"p\" variant=\"h4\" className={classes.depositContext}>\r\n                                        {users && users.length}\r\n                                    </Typography>\r\n\r\n                                    <div>\r\n                                        <Link className={classes.text_color} to=\"/admin/users\">\r\n                                            View Details\r\n                                    </Link>\r\n                                    </div>\r\n                                </Paper>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12} md={4} lg={3}>\r\n                                <Paper className={fixedHeightPaper}>\r\n                                    <Title>Out Of Stock</Title>\r\n                                    <Typography component=\"p\" variant=\"h4\" className={classes.depositContext}>\r\n                                        {outOfStock}\r\n                                    </Typography>\r\n                                </Paper>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12}>\r\n                                <Paper className={classes.paper}>\r\n                                    <Title>Total Amount</Title>\r\n                                    <Typography component=\"p\" variant=\"h4\" className={classes.depositContext}>\r\n                                        ${totalAmount}\r\n                                    </Typography>\r\n                                </Paper>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Container>\r\n                )}\r\n            </main>\r\n        </div>\r\n\r\n    );\r\n}","import React, { Fragment, useEffect } from 'react';\r\nimport MetaData from '../Layouts/MetaData';\r\nimport Loader from '../Layouts/Loader';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getAdminProducts, clearError, deleteProduct } from '../../actions/productActions';\r\nimport { DELETE_PRODUCT_RESET } from '../../constants/productConstants';\r\nimport { Link } from 'react-router-dom';\r\nimport { useAlert } from 'react-alert';\r\nimport { MDBDataTable } from 'mdbreact';\r\nimport Sidebar from './dashboard/Sidebar';\r\n\r\nimport { makeStyles, CssBaseline, Container, } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBarSpacer: theme.mixins.toolbar,\r\n    content: {\r\n        flexGrow: 1,\r\n        height: '100vh',\r\n        overflow: 'auto',\r\n    },\r\n    container: {\r\n        paddingTop: theme.spacing(2),\r\n        paddingBottom: theme.spacing(12),\r\n    },\r\n}));\r\n\r\n\r\nconst ProductList = ({ history }) => {\r\n    const classes = useStyles();\r\n\r\n    const Alert = useAlert();\r\n    const dispatch = useDispatch();\r\n    const { loading, error, products } = useSelector(state => state.products);\r\n    const { error: deleteError, isDeleted } = useSelector(state => state.product);\r\n\r\n    useEffect(() => {\r\n        dispatch(getAdminProducts())\r\n\r\n        if (error) {\r\n            Alert.error(error);\r\n            dispatch(clearError());\r\n        }\r\n        if (deleteError) {\r\n            Alert.error(deleteError);\r\n            dispatch(clearError());\r\n        }\r\n        if (isDeleted) {\r\n            Alert.success(\"Product has been deleted\");\r\n            history.push('/admin/products');\r\n            dispatch({ type: DELETE_PRODUCT_RESET });\r\n        }\r\n\r\n    }, [dispatch, Alert, error, deleteError, isDeleted, history])\r\n\r\n    const setProducts = () => {\r\n        const data = {\r\n            columns: [\r\n                {\r\n                    label: 'ID',\r\n                    field: 'id',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Name',\r\n                    field: 'name',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Price',\r\n                    field: 'price',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Stock',\r\n                    field: 'stock',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Actions',\r\n                    field: 'actions',\r\n                }\r\n            ],\r\n            rows: []\r\n        };\r\n\r\n        products.forEach(product => {\r\n            data.rows.push({\r\n                id: product._id,\r\n                name: product.name,\r\n                price: `$${product.price}`,\r\n                stock: product.stock,\r\n                actions: <div className='d-flex justify-content-around'>\r\n                    <div>\r\n                        <Link to={`/admin/product/${product._id}`} className='btn btn-warning py-1 px-2'>\r\n                            <i className='fa fa-pencil'></i>\r\n                        </Link>\r\n                    </div>\r\n\r\n                    <div className='ml-1'>\r\n                        <button className='btn btn-danger py-1 px-2 ml-2'\r\n                            onClick={() => deleteProductHandler(product._id)}>\r\n                            <i className='fa fa-trash'></i>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            })\r\n        });\r\n        return data;\r\n    }\r\n\r\n    const deleteProductHandler = (id) => {\r\n        dispatch(deleteProduct(id));\r\n    }\r\n\r\n    return (\r\n\r\n        <div className={classes.root}>\r\n            <MetaData title={'All Products'} />\r\n            <CssBaseline />\r\n            <Sidebar />\r\n\r\n            <main className={classes.content}>\r\n                <div className={classes.appBarSpacer} />\r\n                <Container maxWidth=\"lg\" className={classes.container}>\r\n                    <h1 className='mb-5 mt-2'>All Products</h1>\r\n                    {loading ? <Loader /> : (\r\n                        <MDBDataTable\r\n                            data={setProducts()}\r\n                            className='py-3'\r\n                            bordered\r\n                            striped\r\n                            hover\r\n                            responsive\r\n                        />\r\n                    )}\r\n                </Container>\r\n            </main>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ProductList\r\n","import React, { Fragment, useEffect, useState } from 'react';\r\nimport MetaData from '../Layouts/MetaData';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { newProduct, clearError } from '../../actions/productActions';\r\nimport { useAlert } from 'react-alert';\r\nimport { NEW_PRODUCT_RESET } from '../../constants/productConstants';\r\nimport { makeStyles, CssBaseline, Container, } from '@material-ui/core';\r\nimport Sidebar from './dashboard/Sidebar';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBarSpacer: theme.mixins.toolbar,\r\n    content: {\r\n        flexGrow: 1,\r\n        height: '100vh',\r\n        overflow: 'auto',\r\n    },\r\n    container: {\r\n        paddingTop: theme.spacing(2),\r\n        paddingBottom: theme.spacing(12),\r\n    },\r\n}));\r\n\r\nconst NewProduct = ({ history }) => {\r\n    const classes = useStyles();\r\n\r\n    const [name, setName] = useState('');\r\n    const [price, setPrice] = useState(0);\r\n    const [description, setDescription] = useState('');\r\n    const [category, setCategory] = useState('');\r\n    const [stock, setStock] = useState(0);\r\n    const [seller, setSeller] = useState('');\r\n    const [images, setImages] = useState([]);\r\n    const [imagesPreview, setImagesPreview] = useState([]);\r\n\r\n    const categories = [\r\n        'Electronics',\r\n        'Home',\r\n        'Laptop',\r\n        'Cameras',\r\n        'Accessories',\r\n        \"Headphones\",\r\n        'Foods',\r\n        'Clothes/Shoes',\r\n        'Beauty/Health',\r\n        'Sports',\r\n        'Outdoor'\r\n    ];\r\n\r\n    const Alert = useAlert();\r\n    const dispatch = useDispatch();\r\n    const { loading, error, success } = useSelector(state => state.newProduct);\r\n\r\n    useEffect(() => {\r\n        if (error) {\r\n            Alert.error(error);\r\n            dispatch(clearError());\r\n        }\r\n        if (success) {\r\n            history.push('/admin/products');\r\n            Alert.success('Product has been created successfully');\r\n            dispatch({ type: NEW_PRODUCT_RESET })\r\n        }\r\n\r\n    }, [dispatch, Alert, error, success])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        const formData = new FormData();\r\n        formData.set('name', name)\r\n        formData.set('price', price)\r\n        formData.set('description', description)\r\n        formData.set('category', category)\r\n        formData.set('stock', stock)\r\n        formData.set('seller', seller)\r\n\r\n        // for multiple images\r\n        images.forEach(image => {\r\n            formData.append('images', image)\r\n        })\r\n\r\n        dispatch(newProduct(formData))\r\n    }\r\n\r\n    const onChange = e => {\r\n        const files = Array.from(e.target.files);\r\n        // if user want to upload pictures again and when it browse for new picture, we have to \r\n        // clear image Preview and Image\r\n        setImagesPreview([]);\r\n        setImages([])\r\n\r\n        files.forEach(file => {\r\n            const reader = new FileReader();\r\n\r\n            reader.onload = () => {\r\n                if (reader.readyState === 2) {\r\n                    // when second time user upload image, it spread oldArray and new images added to oldArray\r\n                    setImagesPreview(oldArray => [...oldArray, reader.result])\r\n                    setImages(oldArray => [...oldArray, reader.result])\r\n                }\r\n            }\r\n\r\n            reader.readAsDataURL(file)\r\n        })\r\n    }\r\n\r\n    return (\r\n\r\n        <div className={classes.root}>\r\n            <MetaData title={'New Product'} />\r\n            <CssBaseline />\r\n            <Sidebar />\r\n\r\n            <main className={classes.content}>\r\n                <div className={classes.appBarSpacer} />\r\n                <Container maxWidth=\"lg\" className={classes.container}>\r\n                    <Fragment>\r\n                        <div className=\"wrapper mb-5 mt-2\">\r\n                            <form className=\"shadow-lg\" onSubmit={submitHandler} encType='multipart/form-data'>\r\n                                <h1 className=\"mb-4\">New Product</h1>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"name_field\">Name</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        id=\"name_field\"\r\n                                        className=\"form-control\"\r\n                                        value={name}\r\n                                        onChange={(e) => setName(e.target.value)}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"price_field\">Price</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        id=\"price_field\"\r\n                                        className=\"form-control\"\r\n                                        value={price}\r\n                                        onChange={(e) => setPrice(e.target.value)}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"description_field\">Description</label>\r\n                                    <textarea\r\n                                        className=\"form-control\"\r\n                                        id=\"description_field\"\r\n                                        value={description}\r\n                                        onChange={(e) => setDescription(e.target.value)}\r\n                                        rows=\"8\" ></textarea>\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"category_field\">Category</label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        value={category}\r\n                                        onChange={(e) => setCategory(e.target.value)}\r\n                                        id=\"category_field\">\r\n                                        {categories.map(category => (\r\n                                            <option key={category} value={category}> {category}</option>\r\n                                        ))}\r\n                                    </select>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"stock_field\">Stock</label>\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        id=\"stock_field\"\r\n                                        className=\"form-control\"\r\n                                        value={stock}\r\n                                        onChange={(e) => setStock(e.target.value)}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"seller_field\">Seller Name</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        id=\"seller_field\"\r\n                                        className=\"form-control\"\r\n                                        value={seller}\r\n                                        onChange={(e) => setSeller(e.target.value)}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className='form-group'>\r\n                                    <label>Images</label>\r\n\r\n                                    <div className='custom-file'>\r\n                                        <input\r\n                                            type='file'\r\n                                            name='product_images'\r\n                                            className='custom-file-input'\r\n                                            id='customFile'\r\n                                            multiple\r\n                                            onChange={onChange}\r\n                                        />\r\n                                        <label className='custom-file-label' htmlFor='customFile'>\r\n                                            Choose Images\r\n                                    </label>\r\n                                    </div>\r\n                                    {imagesPreview.map(img => (\r\n                                        <img\r\n                                            src={img}\r\n                                            key={img}\r\n                                            alt='Images Preview'\r\n                                            width='55'\r\n                                            height='55'\r\n                                            className='mt-3 mr-2'\r\n                                        />\r\n                                    ))}\r\n                                </div>\r\n\r\n\r\n                                <button\r\n                                    id=\"login_button\"\r\n                                    type=\"submit\"\r\n                                    className=\"btn btn-block py-3\"\r\n                                    disabled={loading ? true : false}\r\n                                >\r\n                                    CREATE\r\n                            </button>\r\n\r\n                            </form>\r\n                        </div>\r\n                    </Fragment>\r\n                </Container>\r\n            </main>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default NewProduct\r\n","import React, { Fragment, useEffect, useState } from 'react';\r\nimport MetaData from '../Layouts/MetaData';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { updateProduct, getProductDetails, clearError } from '../../actions/productActions';\r\nimport { useAlert } from 'react-alert';\r\nimport { UPDATE_PRODUCT_RESET } from '../../constants/productConstants';\r\nimport Sidebar from './dashboard/Sidebar';\r\n\r\nimport { makeStyles, CssBaseline, Container, } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBarSpacer: theme.mixins.toolbar,\r\n    content: {\r\n        flexGrow: 1,\r\n        height: '100vh',\r\n        overflow: 'auto',\r\n    },\r\n    container: {\r\n        paddingTop: theme.spacing(2),\r\n        paddingBottom: theme.spacing(12),\r\n    },\r\n}));\r\n\r\n\r\nconst UpdateProduct = ({ match, history }) => {\r\n    const classes = useStyles();\r\n\r\n    const [name, setName] = useState('');\r\n    const [price, setPrice] = useState(0);\r\n    const [description, setDescription] = useState('');\r\n    const [category, setCategory] = useState('');\r\n    const [stock, setStock] = useState(0);\r\n    const [seller, setSeller] = useState('');\r\n    const [images, setImages] = useState([]);\r\n    const [oldImages, setOldImages] = useState([]);\r\n    const [imagesPreview, setImagesPreview] = useState([]);\r\n\r\n    const categories = [\r\n        'Electronics',\r\n        'Home',\r\n        'Laptop',\r\n        'Cameras',\r\n        'Accessories',\r\n        \"Headphones\",\r\n        'Foods',\r\n        'Clothes/Shoes',\r\n        'Beauty/Health',\r\n        'Sports',\r\n        'Outdoor'\r\n    ];\r\n\r\n    const Alert = useAlert();\r\n    const dispatch = useDispatch();\r\n    const { loading, error: updateError, isUpdated } = useSelector(state => state.product);\r\n    const { error, product } = useSelector(state => state.productDetails);\r\n\r\n    const productID = match.params.id;\r\n\r\n    useEffect(() => {\r\n        // if product id is changed, then dispatch productDetails for that coresspond product id\r\n        if (product && productID !== product._id) {\r\n            dispatch(getProductDetails(productID));\r\n        }\r\n        else {\r\n            setName(product.name);\r\n            setPrice(product.price);\r\n            setDescription(product.description);\r\n            setCategory(product.category);\r\n            setSeller(product.seller);\r\n            setStock(product.stock);\r\n            setOldImages(product.images);\r\n        }\r\n\r\n        if (error) {\r\n            Alert.error(error);\r\n            dispatch(clearError());\r\n        }\r\n        if (updateError) {\r\n            Alert.error(updateError);\r\n            dispatch(clearError());\r\n        }\r\n\r\n        if (isUpdated) {\r\n            history.push('/admin/products');\r\n            Alert.success('Product has been updated successfully');\r\n            dispatch({ type: UPDATE_PRODUCT_RESET })\r\n        }\r\n\r\n    }, [dispatch, Alert, error, isUpdated, history, updateError, product, productID])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        const formData = new FormData();\r\n        formData.set('name', name)\r\n        formData.set('price', price)\r\n        formData.set('description', description)\r\n        formData.set('category', category)\r\n        formData.set('stock', stock)\r\n        formData.set('seller', seller)\r\n\r\n        // for multiple images\r\n        images.forEach(image => {\r\n            formData.append('images', image)\r\n        })\r\n\r\n        dispatch(updateProduct(product._id, formData))\r\n    }\r\n\r\n    const onChange = e => {\r\n        const files = Array.from(e.target.files);\r\n        setImagesPreview([]);\r\n        setImages([]);\r\n        setOldImages([]);\r\n\r\n        files.forEach(file => {\r\n            const reader = new FileReader();\r\n\r\n            reader.onload = () => {\r\n                if (reader.readyState === 2) {\r\n                    // when second time user upload image, it spread oldArray and new images added to oldArray\r\n                    setImagesPreview(oldArray => [...oldArray, reader.result])\r\n                    setImages(oldArray => [...oldArray, reader.result])\r\n                }\r\n            }\r\n\r\n            reader.readAsDataURL(file)\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <MetaData title={'Update Product'} />\r\n            <CssBaseline />\r\n            <Sidebar />\r\n\r\n            <main className={classes.content}>\r\n                <div className={classes.appBarSpacer} />\r\n                <Container maxWidth=\"lg\" className={classes.container}>\r\n                    <Fragment>\r\n                        <div className=\"wrapper mb-5 mt-2\">\r\n                            <form className=\"shadow-lg\" onSubmit={submitHandler} encType='multipart/form-data'>\r\n                                <h1 className=\"mb-4\">Update Product</h1>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"name_field\">Name</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        id=\"name_field\"\r\n                                        className=\"form-control\"\r\n                                        value={name}\r\n                                        onChange={(e) => setName(e.target.value)}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"price_field\">Price</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        id=\"price_field\"\r\n                                        className=\"form-control\"\r\n                                        value={price}\r\n                                        onChange={(e) => setPrice(e.target.value)}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"description_field\">Description</label>\r\n                                    <textarea\r\n                                        className=\"form-control\"\r\n                                        id=\"description_field\"\r\n                                        value={description}\r\n                                        onChange={(e) => setDescription(e.target.value)}\r\n                                        rows=\"8\" ></textarea>\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"category_field\">Category</label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        value={category}\r\n                                        onChange={(e) => setCategory(e.target.value)}\r\n                                        id=\"category_field\">\r\n                                        {categories.map(category => (\r\n                                            <option key={category} value={category}> {category}</option>\r\n                                        ))}\r\n                                    </select>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"stock_field\">Stock</label>\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        id=\"stock_field\"\r\n                                        className=\"form-control\"\r\n                                        value={stock}\r\n                                        onChange={(e) => setStock(e.target.value)}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"seller_field\">Seller Name</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        id=\"seller_field\"\r\n                                        className=\"form-control\"\r\n                                        value={seller}\r\n                                        onChange={(e) => setSeller(e.target.value)}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className='form-group'>\r\n                                    <label>Images</label>\r\n\r\n                                    <div className='custom-file'>\r\n                                        <input\r\n                                            type='file'\r\n                                            name='product_images'\r\n                                            className='custom-file-input'\r\n                                            id='customFile'\r\n                                            multiple\r\n                                            onChange={onChange}\r\n                                        />\r\n                                        <label className='custom-file-label' htmlFor='customFile'>\r\n                                            Choose Images\r\n                                    </label>\r\n                                    </div>\r\n                                    {oldImages && oldImages.map(img => (\r\n                                        <img\r\n                                            src={img.url}\r\n                                            key={img}\r\n                                            alt={img.url}\r\n                                            width='55'\r\n                                            height='55'\r\n                                            className='mt-3 mr-2'\r\n                                        />\r\n                                    ))}\r\n\r\n                                    {imagesPreview.map(img => (\r\n                                        <img\r\n                                            src={img}\r\n                                            key={img}\r\n                                            alt='Images Preview'\r\n                                            width='55'\r\n                                            height='55'\r\n                                            className='mt-3 mr-2'\r\n                                        />\r\n                                    ))}\r\n                                </div>\r\n\r\n                                <button\r\n                                    id=\"login_button\"\r\n                                    type=\"submit\"\r\n                                    className=\"btn btn-block py-3\"\r\n                                    disabled={loading ? true : false}\r\n                                >\r\n                                    UPDATE\r\n                            </button>\r\n\r\n                            </form>\r\n                        </div>\r\n                    </Fragment>\r\n                </Container>\r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UpdateProduct\r\n","import React, { Fragment, useEffect } from 'react';\r\nimport MetaData from '../Layouts/MetaData';\r\nimport Loader from '../Layouts/Loader';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { allOrders, deleteOrder, clearError } from '../../actions/orderAction';\r\nimport { DELETE_ORDER_RESET } from '../../constants/orderConstant';\r\nimport { Link } from 'react-router-dom';\r\nimport { useAlert } from 'react-alert';\r\nimport { MDBDataTable } from 'mdbreact';\r\nimport Sidebar from './dashboard/Sidebar';\r\n\r\nimport { makeStyles, CssBaseline, Container, } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBarSpacer: theme.mixins.toolbar,\r\n    content: {\r\n        flexGrow: 1,\r\n        height: '100vh',\r\n        overflow: 'auto',\r\n    },\r\n    container: {\r\n        paddingTop: theme.spacing(2),\r\n        paddingBottom: theme.spacing(12),\r\n    },\r\n}));\r\n\r\nconst OrderList = ({ history }) => {\r\n    const classes = useStyles();\r\n\r\n    const Alert = useAlert();\r\n    const dispatch = useDispatch();\r\n    const { loading, error, orders } = useSelector(state => state.allOrders);\r\n    const { isDeleted } = useSelector(state => state.order);\r\n\r\n    useEffect(() => {\r\n        dispatch(allOrders())\r\n\r\n        if (error) {\r\n            Alert.error(error);\r\n            dispatch(clearError());\r\n        }\r\n\r\n        if (isDeleted) {\r\n            Alert.success(\"Order has been deleted\");\r\n            history.push('/admin/orders');\r\n            dispatch({ type: DELETE_ORDER_RESET });\r\n        }\r\n\r\n    }, [dispatch, Alert, error, isDeleted, history])\r\n\r\n    const deleteOrderHandler = (id) => {\r\n        dispatch(deleteOrder(id));\r\n    }\r\n\r\n    const setOrders = () => {\r\n        const data = {\r\n            columns: [\r\n                {\r\n                    label: 'Order ID',\r\n                    field: 'id',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'No Of Items',\r\n                    field: 'numOfItems',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Amount',\r\n                    field: 'amount',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Status',\r\n                    field: 'status',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Actions',\r\n                    field: 'actions',\r\n                }\r\n            ],\r\n            rows: []\r\n        };\r\n\r\n        orders.forEach(order => {\r\n            data.rows.push({\r\n                id: order._id,\r\n                numOfItems: order.orderItems.length,\r\n                amount: `$${order.totalPrice}`,\r\n                status: order.orderStatus && String(order.orderStatus).includes(\"Delivered\")\r\n                    ? <p style={{ color: 'green' }}>{order.orderStatus}</p>\r\n                    : <p style={{ color: 'red' }}>{order.orderStatus}</p>,\r\n                actions: <div className='d-flex justify-content-around'>\r\n                    <div>\r\n                        <Link to={`/admin/order/${order._id}`} className='btn btn-warning'>\r\n                            <i className='fa fa-eye'></i>\r\n                        </Link>\r\n                    </div>\r\n\r\n                    <div className='ml-1'>\r\n                        <button\r\n                            className='btn btn-danger'\r\n                            onClick={() => deleteOrderHandler(order._id)}>\r\n                            <i className='fa fa-trash'></i>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            })\r\n        });\r\n        return data;\r\n    }\r\n    return (\r\n\r\n        <div className={classes.root}>\r\n            <MetaData title={'All Orders'} />\r\n            <CssBaseline />\r\n            <Sidebar />\r\n\r\n            <main className={classes.content}>\r\n                <div className={classes.appBarSpacer} />\r\n                <Container maxWidth=\"lg\" className={classes.container}>\r\n                    <h1 className='mb-5 mt-2'>All Orders</h1>\r\n                    {loading ? <Loader /> : (\r\n                        <MDBDataTable\r\n                            data={setOrders()}\r\n                            className='py-3'\r\n                            bordered\r\n                            striped\r\n                            hover\r\n                            responsive\r\n                        />\r\n                    )}\r\n                </Container>\r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderList\r\n","import React, { Fragment, useState, useEffect } from 'react';\r\nimport MetaData from '../Layouts/MetaData';\r\nimport Loader from '../Layouts/Loader';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getOrderDetails, updateOrder, clearError } from '../../actions/orderAction';\r\nimport { UPDATE_ORDER_RESET } from '../../constants/orderConstant';\r\nimport { Link } from 'react-router-dom';\r\nimport { useAlert } from 'react-alert';\r\nimport Sidebar from './dashboard/Sidebar';\r\n\r\nimport { makeStyles, CssBaseline, Container, } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBarSpacer: theme.mixins.toolbar,\r\n    content: {\r\n        flexGrow: 1,\r\n        height: '100vh',\r\n        overflow: 'auto',\r\n    },\r\n    container: {\r\n        paddingTop: theme.spacing(2),\r\n        paddingBottom: theme.spacing(12),\r\n    },\r\n}));\r\n\r\n\r\nconst ProcessOrder = ({ match }) => {\r\n    const classes = useStyles();\r\n\r\n    const [status, setStatus] = useState('');\r\n\r\n    const Alert = useAlert();\r\n    const dispatch = useDispatch();\r\n    const { order = {}, loading } = useSelector(state => state.orderDetails);\r\n    const { shippingInfo, orderItems, paymentInfo, user, totalPrice, orderStatus } = order;\r\n    const { isUpdated, error } = useSelector(state => state.order);\r\n\r\n    const orderID = match.params.id;\r\n\r\n    useEffect(() => {\r\n        dispatch(getOrderDetails(orderID));\r\n        if (error) {\r\n            Alert.error(error);\r\n            dispatch(clearError());\r\n        }\r\n\r\n        if (isUpdated) {\r\n            Alert.success('Order has been updated successfully');\r\n            dispatch({ type: UPDATE_ORDER_RESET })\r\n        }\r\n\r\n    }, [dispatch, Alert, error, isUpdated, orderID])\r\n\r\n    const updateOrderHandler = (id) => {\r\n        const formData = new FormData();\r\n        formData.set('status', status)\r\n        dispatch(updateOrder(id, formData))\r\n    }\r\n\r\n    const shippingDetails = shippingInfo && `${shippingInfo.address}, ${shippingInfo.city},\r\n     ${shippingInfo.postalCode}, ${shippingInfo.country}`;\r\n\r\n    const isPaid = paymentInfo && paymentInfo.status === 'succeeded' ? true : false;\r\n\r\n    return (\r\n\r\n        <div className={classes.root}>\r\n            <MetaData title={`Process Order# ${order && order._id}`} />\r\n            <CssBaseline />\r\n            <Sidebar />\r\n\r\n            <main className={classes.content}>\r\n                <div className={classes.appBarSpacer} />\r\n                <Container maxWidth=\"lg\" className={classes.container}>\r\n                    {loading ? <Loader /> : (\r\n                        <Fragment>\r\n                            <div className=\"row d-flex justify-content-around\">\r\n                                <div className=\"col-12 col-lg-7 order-details\">\r\n\r\n                                    <h2 className=\"mb-5 mt-2\">Order # ${order._id}</h2>\r\n\r\n                                    <h4 className=\"mb-4\">Shipping Info</h4>\r\n                                    <p><b>Name:</b> {user && user.name}</p>\r\n                                    <p><b>Phone:</b> {shippingInfo && shippingInfo.phoneNo}</p>\r\n                                    <p className=\"mb-4\"><b>Address:</b>{shippingDetails}</p>\r\n                                    <p><b>Amount:</b> ${totalPrice}</p>\r\n\r\n                                    <hr />\r\n\r\n                                    <h4 className=\"my-4\">Payment</h4>\r\n                                    <p className={isPaid ? 'greenColor' : 'redColor'} >\r\n                                        <b>{isPaid ? 'PAID' : 'NOT PAID'}</b></p>\r\n\r\n                                    <h4 className=\"my-4\">Stripe ID</h4>\r\n                                    <p><b>{paymentInfo && paymentInfo.id}</b></p>\r\n\r\n                                    <h4 className=\"my-4\">Order Status:</h4>\r\n                                    <p className={orderStatus && String(orderStatus).includes(\"Delivered\") ? 'greenColor' : 'redColor'} >\r\n                                        <b>{orderStatus}</b></p>\r\n\r\n\r\n                                    <h4 className=\"my-4\">Order Items:</h4>\r\n\r\n                                    <hr />\r\n                                    <div className=\"cart-item my-1\">\r\n                                        {orderItems && orderItems.map(item => (\r\n                                            <div key={item.product} className=\"row my-5\">\r\n                                                <div className=\"col-4 col-lg-2\">\r\n                                                    <img src={item.image} alt={item.name} height=\"45\" width=\"65\" />\r\n                                                </div>\r\n\r\n                                                <div className=\"col-5 col-lg-5\">\r\n                                                    <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                </div>\r\n\r\n\r\n                                                <div className=\"col-4 col-lg-2 mt-4 mt-lg-0\">\r\n                                                    <p>${item.price}</p>\r\n                                                </div>\r\n\r\n                                                <div className=\"col-4 col-lg-3 mt-4 mt-lg-0\">\r\n                                                    <p>{item.quantity} Piece(s)</p>\r\n                                                </div>\r\n                                            </div>\r\n                                        ))}\r\n                                    </div>\r\n                                    <hr />\r\n                                </div>\r\n\r\n                                <div className=\"col-12 col-lg-3 mt-5\">\r\n                                    <h4 className=\"my-4\">Status</h4>\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <select\r\n                                            className=\"form-control\"\r\n                                            name='status'\r\n                                            value={status}\r\n                                            onChange={e => setStatus(e.target.value)}\r\n                                        >\r\n                                            <option value=\"Processing\">Processing</option>\r\n                                            <option value=\"Shipped\">Shipped</option>\r\n                                            <option value=\"Delivered\">Delivered</option>\r\n                                        </select>\r\n                                    </div>\r\n\r\n                                    <button\r\n                                        className=\"btn btn-primary btn-block\"\r\n                                        onClick={() => updateOrderHandler(order._id)}>\r\n                                        Update Status\r\n                                </button>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </Fragment>\r\n                    )}\r\n                </Container>\r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProcessOrder","import React, { Fragment, useEffect } from 'react';\r\nimport MetaData from '../Layouts/MetaData';\r\nimport Loader from '../Layouts/Loader';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { allUsers, clearError, deleteUser } from '../../actions/userAction';\r\nimport { DELETE_USER_RESET } from '../../constants/userConstant';\r\nimport { Link } from 'react-router-dom';\r\nimport { useAlert } from 'react-alert';\r\nimport { MDBDataTable } from 'mdbreact';\r\nimport Sidebar from './dashboard/Sidebar';\r\n\r\nimport { makeStyles, CssBaseline, Container, } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBarSpacer: theme.mixins.toolbar,\r\n    content: {\r\n        flexGrow: 1,\r\n        height: '100vh',\r\n        overflow: 'auto',\r\n    },\r\n    container: {\r\n        paddingTop: theme.spacing(2),\r\n        paddingBottom: theme.spacing(12),\r\n    },\r\n}));\r\n\r\n\r\nconst UsersList = ({ history }) => {\r\n    const classes = useStyles();\r\n\r\n    const Alert = useAlert();\r\n    const dispatch = useDispatch();\r\n    const { loading, error, users } = useSelector(state => state.allUsers);\r\n    const { isDeleted } = useSelector(state => state.user);\r\n\r\n    useEffect(() => {\r\n        dispatch(allUsers())\r\n\r\n        if (error) {\r\n            Alert.error(error);\r\n            dispatch(clearError());\r\n        }\r\n\r\n        if (isDeleted) {\r\n            Alert.success(\"User has been deleted\");\r\n            history.push('/admin/users');\r\n            dispatch({ type: DELETE_USER_RESET });\r\n        }\r\n\r\n    }, [dispatch, Alert, error, history, isDeleted])\r\n\r\n    const deleteUserHandler = (id) => {\r\n        dispatch(deleteUser(id));\r\n    }\r\n\r\n    const setUsers = () => {\r\n        const data = {\r\n            columns: [\r\n                {\r\n                    label: 'User ID',\r\n                    field: 'id',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Name',\r\n                    field: 'name',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Email',\r\n                    field: 'email',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Role',\r\n                    field: 'role',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Actions',\r\n                    field: 'actions',\r\n                }\r\n            ],\r\n            rows: []\r\n        };\r\n\r\n        users.forEach(user => {\r\n            data.rows.push({\r\n                id: user._id,\r\n                name: user.name,\r\n                email: user.email,\r\n                role: user.role,\r\n                actions: <div className='d-flex justify-content-around'>\r\n                    <div>\r\n                        <Link to={`/admin/user/${user._id}`} className='btn btn-warning py-1 px-2'>\r\n                            <i className='fa fa-pencil'></i>\r\n                        </Link>\r\n                    </div>\r\n\r\n                    <div className='ml-1'>\r\n                        <button\r\n                            onClick={() => deleteUserHandler(user._id)}\r\n                            className='btn btn-danger py-1 px-2 ml-2'>\r\n                            <i className='fa fa-trash'></i>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            })\r\n        });\r\n        return data;\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <MetaData title={'All Users'} />\r\n            <CssBaseline />\r\n            <Sidebar />\r\n\r\n            <main className={classes.content}>\r\n                <div className={classes.appBarSpacer} />\r\n                <Container maxWidth=\"lg\" className={classes.container}>\r\n                    <h1 className='mb-5 mt-2'>All Users</h1>\r\n                    {loading ? <Loader /> : (\r\n                        <MDBDataTable\r\n                            data={setUsers()}\r\n                            className='py-3'\r\n                            bordered\r\n                            striped\r\n                            hover\r\n                            responsive\r\n                        />\r\n                    )}\r\n                </Container>\r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UsersList\r\n","import React, { useState, Fragment, useEffect } from 'react';\r\nimport MetaData from '../Layouts/MetaData';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { updateUser, clearError, getUserDetails } from '../../actions/userAction';\r\nimport { useAlert } from 'react-alert';\r\nimport { UPDATE_USER_RESET } from '../../constants/userConstant';\r\nimport Sidebar from './dashboard/Sidebar';\r\n\r\nimport { makeStyles, CssBaseline, Container, } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBarSpacer: theme.mixins.toolbar,\r\n    content: {\r\n        flexGrow: 1,\r\n        height: '100vh',\r\n        overflow: 'auto',\r\n    },\r\n    container: {\r\n        paddingTop: theme.spacing(2),\r\n        paddingBottom: theme.spacing(12),\r\n    },\r\n}));\r\n\r\n\r\nconst UpdateUser = ({ match, history }) => {\r\n    const classes = useStyles();\r\n\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [role, setRole] = useState('');\r\n\r\n    const dispatch = useDispatch();\r\n    const alert = useAlert();\r\n\r\n    const { user } = useSelector(state => state.userDetails);\r\n    const { error, isUpdated } = useSelector(state => state.user);\r\n    const userID = match.params.id;\r\n\r\n    useEffect(() => {\r\n        if (user && user._id !== userID) {\r\n            dispatch(getUserDetails(userID))\r\n\r\n        } else {\r\n            setName(user.name);\r\n            setEmail(user.email);\r\n            setRole(user.role);\r\n        }\r\n        if (error) {\r\n            alert.error(error)\r\n            dispatch(clearError());\r\n        }\r\n        if (isUpdated) {\r\n            alert.success('User Has Been Updated!')\r\n\r\n            history.push('/admin/users')\r\n\r\n            dispatch({\r\n                type: UPDATE_USER_RESET\r\n            })\r\n        }\r\n    }, [dispatch, history, alert, error, isUpdated, user._id])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        const formData = new FormData();\r\n        formData.set('name', name)\r\n        formData.set('email', email)\r\n        formData.set('role', role)\r\n\r\n        dispatch(updateUser(user._id, formData))\r\n    }\r\n    return (\r\n        <div className={classes.root}>\r\n            <MetaData title={`Update User - Admin`} />\r\n            <CssBaseline />\r\n            <Sidebar />\r\n\r\n            <main className={classes.content}>\r\n                <div className={classes.appBarSpacer} />\r\n                <Container maxWidth=\"lg\" className={classes.container}>\r\n                    <div className=\"row wrapper mt-0 mb-0\">\r\n                        <div className=\"col-10 col-lg-5\">\r\n                            <form className=\"shadow-lg\" onSubmit={submitHandler}>\r\n                                <h1 className=\"mt-2 mb-5\">Update User</h1>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"name_field\">Name</label>\r\n                                    <input\r\n                                        type=\"name\"\r\n                                        id=\"name_field\"\r\n                                        className=\"form-control\"\r\n                                        name='name'\r\n                                        value={name}\r\n                                        onChange={e => setName(e.target.value)}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"email_field\">Email</label>\r\n                                    <input\r\n                                        type=\"email\"\r\n                                        id=\"email_field\"\r\n                                        className=\"form-control\"\r\n                                        name='email'\r\n                                        value={email}\r\n                                        onChange={e => setEmail(e.target.value)}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"role_field\">Role</label>\r\n\r\n                                    <select\r\n                                        id=\"role_field\"\r\n                                        className=\"form-control\"\r\n                                        name='role'\r\n                                        value={role}\r\n                                        onChange={e => setRole(e.target.value)}\r\n                                    >\r\n                                        <option value=\"user\">user</option>\r\n                                        <option value=\"admin\">admin</option>\r\n                                    </select>\r\n                                </div>\r\n\r\n                                <button type=\"submit\" className=\"btn update-btn btn-block mt-4 mb-3\" >Update</button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </Container>\r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UpdateUser\r\n","import React, { Fragment, useState, useEffect } from 'react';\r\nimport MetaData from '../Layouts/MetaData';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getProductReviews, deleteReview, clearError } from '../../actions/productActions';\r\nimport { DELETE_REVIEW_RESET } from '../../constants/productConstants';\r\nimport { useAlert } from 'react-alert';\r\nimport { MDBDataTable } from 'mdbreact';\r\nimport Sidebar from './dashboard/Sidebar';\r\n\r\nimport { makeStyles, CssBaseline, Container, } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBarSpacer: theme.mixins.toolbar,\r\n    content: {\r\n        flexGrow: 1,\r\n        height: '100vh',\r\n        overflow: 'auto',\r\n    },\r\n    container: {\r\n        paddingTop: theme.spacing(2),\r\n        paddingBottom: theme.spacing(4),\r\n    },\r\n}));\r\n\r\n\r\nconst ProductReviews = () => {\r\n    const classes = useStyles();\r\n\r\n    const Alert = useAlert();\r\n    const dispatch = useDispatch();\r\n    const { error, reviews } = useSelector(state => state.productReviews);\r\n    const { isDeleted } = useSelector(state => state.review);\r\n\r\n    const [productId, setProductId] = useState('');\r\n\r\n    useEffect(() => {\r\n\r\n        if (error) {\r\n            Alert.error(error);\r\n            dispatch(clearError());\r\n        }\r\n\r\n        if (productId !== '') {\r\n            dispatch(getProductReviews(productId));\r\n        }\r\n\r\n        if (isDeleted) {\r\n            Alert.success(\"Review has been deleted\");\r\n            dispatch({ type: DELETE_REVIEW_RESET });\r\n        }\r\n\r\n    }, [dispatch, Alert, error, isDeleted])\r\n\r\n    const deleteReviewHandler = (id) => {\r\n        dispatch(deleteReview(id, productId));\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(getProductReviews(productId));\r\n    }\r\n\r\n    const setReviews = () => {\r\n        const data = {\r\n            columns: [\r\n                {\r\n                    label: 'Review ID',\r\n                    field: 'id',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Rating',\r\n                    field: 'rating',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Comment',\r\n                    field: 'comment',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'User',\r\n                    field: 'user',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Actions',\r\n                    field: 'actions',\r\n                }\r\n            ],\r\n            rows: []\r\n        };\r\n\r\n        reviews.forEach(review => {\r\n            data.rows.push({\r\n                id: review._id,\r\n                rating: review.rating,\r\n                comment: review.comment,\r\n                user: review.name,\r\n                actions:\r\n                    <button\r\n                        onClick={() => deleteReviewHandler(review._id)}\r\n                        className='btn btn-danger py-1 px-2 ml-2'>\r\n                        <i className='fa fa-trash'></i>\r\n                    </button>\r\n            })\r\n        });\r\n        return data;\r\n    }\r\n    return (\r\n        <div className={classes.root}>\r\n            <MetaData title={'Product Reviews'} />\r\n            <CssBaseline />\r\n            <Sidebar />\r\n\r\n            <main className={classes.content}>\r\n                <div className={classes.appBarSpacer} />\r\n                <Container maxWidth=\"lg\" className={classes.container}>\r\n                    <Fragment>\r\n                        <div className=\"row justify-content-center mt-5\">\r\n                            <div className=\"col-5\">\r\n                                <form onSubmit={submitHandler}>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"productId_field\">Enter Product ID</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            id=\"productId_field\"\r\n                                            className=\"form-control\"\r\n                                            value={productId}\r\n                                            onChange={(e) => setProductId(e.target.value)}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <button\r\n                                        id=\"search_button\"\r\n                                        type=\"submit\"\r\n                                        className=\"btn btn-primary btn-block py-2\"\r\n                                    >\r\n                                        SEARCH\r\n\t\t\t\t\t\t\t\t</button>\r\n                                </ form>\r\n                            </div>\r\n                        </div>\r\n                        {reviews && reviews.length > 0 ? (\r\n                            <MDBDataTable\r\n                                data={setReviews()}\r\n                                className='py-3'\r\n                                bordered\r\n                                striped\r\n                                hover\r\n                                responsive\r\n                            />\r\n                        ) :\r\n                            <p className='mt-5 text-center'>No Review Found</p>\r\n                        }\r\n                    </Fragment>\r\n                </Container>\r\n            </main>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ProductReviews\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport {\r\n    productReducer,\r\n    productDetailsReducer,\r\n    newReviewReducer,\r\n    newProductReducer,\r\n    product_Reducer,\r\n    productReviewReducer,\r\n    reviewReducer\r\n} from './reducer/productReducers';\r\nimport {\r\n    authReducer,\r\n    userReducer,\r\n    forogotPasswordReducer,\r\n    allUsersReducer,\r\n    userDetailsReducer\r\n} from './reducer/userReducer';\r\n\r\nimport { cartReducer } from './reducer/cartReducers';\r\nimport {\r\n    newOrderReducer,\r\n    myOrdersReducer,\r\n    orderDetailReducer,\r\n    allOrdersReducer,\r\n    orderReducer\r\n} from './reducer/orderReducer';\r\n\r\nconst reducer = combineReducers({\r\n    products: productReducer,\r\n    productDetails: productDetailsReducer,\r\n    auth: authReducer,\r\n    user: userReducer,\r\n    forogotPassword: forogotPasswordReducer,\r\n    cart: cartReducer,\r\n    newOrder: newOrderReducer,\r\n    myOrders: myOrdersReducer,\r\n    orderDetails: orderDetailReducer,\r\n    newReview: newReviewReducer,\r\n    newProduct: newProductReducer,\r\n    product: product_Reducer,\r\n    allOrders: allOrdersReducer,\r\n    order: orderReducer,\r\n    allUsers: allUsersReducer,\r\n    userDetails: userDetailsReducer,\r\n    productReviews: productReviewReducer,\r\n    review: reviewReducer\r\n\r\n})\r\n\r\n// put data in state just before loading\r\nlet initialState = {\r\n    //  pull data from localStorage and save it to initialState\r\n    // if item exist, get it from LocalStorage and parse it to JSON\r\n    cart: {\r\n        cartItems: localStorage.getItem('cartItems')\r\n            ? JSON.parse(localStorage.getItem('cartItems'))\r\n            : [],\r\n        shippingInfo: localStorage.getItem('shippingInfo')\r\n            ? JSON.parse(localStorage.getItem('shippingInfo'))\r\n            : {},\r\n    }\r\n}\r\n\r\nconst middleWare = [thunk];\r\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleWare)))\r\n\r\nexport default store;","import {\r\n    ALL_PRODUCT_FAIL,\r\n    ALL_PRODUCT_REQUEST,\r\n    ALL_PRODUCT_SUCCESS,\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n    NEW_REVIEW_REQUEST,\r\n    NEW_REVIEW_SUCCESS,\r\n    NEW_REVIEW_FAIL,\r\n    NEW_REVIEW_RESET,\r\n    ADMIN_PRODUCT_REQUEST,\r\n    ADMIN_PRODUCT_FAIL,\r\n    ADMIN_PRODUCT_SUCCESS,\r\n    NEW_PRODUCT_REQUEST,\r\n    NEW_PRODUCT_SUCCESS,\r\n    NEW_PRODUCT_FAIL,\r\n    NEW_PRODUCT_RESET,\r\n    DELETE_PRODUCT_REQUEST,\r\n    DELETE_PRODUCT_SUCCESS,\r\n    DELETE_PRODUCT_FAIL,\r\n    DELETE_PRODUCT_RESET,\r\n    UPDATE_PRODUCT_REQUEST,\r\n    UPDATE_PRODUCT_SUCCESS,\r\n    UPDATE_PRODUCT_FAIL,\r\n    UPDATE_PRODUCT_RESET,\r\n    GET_REVIEWS_REQUEST,\r\n    GET_REVIEWS_SUCCESS,\r\n    GET_REVIEWS_FAIL,\r\n    DELETE_REVIEW_REQUEST,\r\n    DELETE_REVIEW_SUCCESS,\r\n    DELETE_REVIEW_FAIL,\r\n    DELETE_REVIEW_RESET,\r\n    CLEAR_ERRORS\r\n} from '../constants/productConstants';\r\n\r\nexport const productReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case ALL_PRODUCT_REQUEST:\r\n        case ADMIN_PRODUCT_REQUEST:\r\n            return {\r\n                loading: true,\r\n                products: []\r\n            }\r\n        case ALL_PRODUCT_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                products: action.payload.products,\r\n                productsCount: action.payload.productsCount,\r\n                resPerPage: action.payload.resPerPage,\r\n                filteredProductCount: action.payload.filteredProductCount\r\n            }\r\n        case ADMIN_PRODUCT_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                products: action.payload\r\n            }\r\n        case ALL_PRODUCT_FAIL:\r\n        case ADMIN_PRODUCT_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const productDetailsReducer = (state = { product: {} }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DETAILS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                product: action.payload\r\n            }\r\n        case PRODUCT_DETAILS_FAIL:\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            }\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const newReviewReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case NEW_REVIEW_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case NEW_REVIEW_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: action.payload\r\n            }\r\n        case NEW_REVIEW_FAIL:\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            }\r\n        case NEW_REVIEW_RESET:\r\n            return {\r\n                ...state,\r\n                success: false\r\n            }\r\n\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const newProductReducer = (state = { product: {} }, action) => {\r\n    switch (action.type) {\r\n        case NEW_PRODUCT_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case NEW_PRODUCT_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: action.payload.success,\r\n                product: action.payload.product\r\n            }\r\n        case NEW_PRODUCT_FAIL:\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            }\r\n        case NEW_PRODUCT_RESET:\r\n            return {\r\n                ...state,\r\n                success: false\r\n            }\r\n\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n// Reducer for delete and update product\r\nexport const product_Reducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case DELETE_PRODUCT_REQUEST:\r\n        case UPDATE_PRODUCT_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case DELETE_PRODUCT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                isDeleted: action.payload\r\n            }\r\n        case UPDATE_PRODUCT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                isUpdated: action.payload\r\n            }\r\n\r\n        case DELETE_PRODUCT_FAIL:\r\n        case UPDATE_PRODUCT_FAIL:\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            }\r\n        case DELETE_PRODUCT_RESET:\r\n            return {\r\n                ...state,\r\n                isDeleted: false\r\n            }\r\n        case UPDATE_PRODUCT_RESET:\r\n            return {\r\n                ...state,\r\n                isUpdated: false\r\n            }\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const productReviewReducer = (state = { reviews: [] }, action) => {\r\n    switch (action.type) {\r\n        case GET_REVIEWS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_REVIEWS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                reviews: action.payload,\r\n            }\r\n        case GET_REVIEWS_FAIL:\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            }\r\n\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const reviewReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case DELETE_REVIEW_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case DELETE_REVIEW_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                isDeleted: action.payload\r\n            }\r\n\r\n        case DELETE_REVIEW_FAIL:\r\n\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            }\r\n        case DELETE_REVIEW_RESET:\r\n            return {\r\n                ...state,\r\n                isDeleted: false\r\n            }\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {\r\n    LOGIN_REQUEST,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    REGISTER_USER_REQUEST,\r\n    REGISTER_USER_SUCCESS,\r\n    REGISTER_USER_FAIL,\r\n    LOAD_LOGGED_USER_REQUEST,\r\n    LOAD_LOGGED_USER_SUCCESS,\r\n    LOAD_LOGGED_USER_FAIL,\r\n    LOGOUT_SUCCESS,\r\n    LOGOUT_FAIL,\r\n    UPDATE_PROFILE_REQUEST,\r\n    UPDATE_PROFILE_FAIL,\r\n    UPDATE_PROFILE_RESET,\r\n    UPDATE_PROFILE_SUCCESS,\r\n    UPDATE_PASSWORD_REQUEST,\r\n    UPDATE_PASSWORD_SUCCESS,\r\n    UPDATE_PASSWORD_FAIL,\r\n    UPDATE_PASSWORD_RESET,\r\n    FORGOT_PASSWORD_REQUEST,\r\n    FORGOT_PASSWORD_SUCCESS,\r\n    FORGOT_PASSWORD_FAIL,\r\n    NEW_PASSWORD_REQUEST,\r\n    NEW_PASSWORD_SUCCESS,\r\n    NEW_PASSWORD_FAIL,\r\n    ALL_USERS_REQUEST,\r\n    ALL_USERS_SUCCESS,\r\n    ALL_USERS_FAIL,\r\n    UPDATE_USER_REQUEST,\r\n    UPDATE_USER_SUCCESS,\r\n    UPDATE_USER_FAIL,\r\n    UPDATE_USER_RESET,\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    DELETE_USER_REQUEST,\r\n    DELETE_USER_SUCCESS,\r\n    DELETE_USER_FAIL,\r\n    DELETE_USER_RESET,\r\n    CLEAR_ERRORS\r\n} from '../constants/userConstant';\r\n\r\nexport const authReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case LOGIN_REQUEST:\r\n        case REGISTER_USER_REQUEST:\r\n        case LOAD_LOGGED_USER_REQUEST:\r\n            return {\r\n                loading: true,\r\n                isAuthenticated: false,\r\n            }\r\n        case LOGIN_SUCCESS:\r\n        case REGISTER_USER_SUCCESS:\r\n        case LOAD_LOGGED_USER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                isAuthenticated: true,\r\n                user: action.payload\r\n            }\r\n        case LOGOUT_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                isAuthenticated: false,\r\n                user: null\r\n            }\r\n\r\n        case LOAD_LOGGED_USER_FAIL:\r\n            return {\r\n                loading: false,\r\n                isAuthenticated: false,\r\n                user: null,\r\n                error: action.payload\r\n            }\r\n        case LOGIN_FAIL:\r\n        case REGISTER_USER_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                isAuthenticated: false,\r\n                user: null,\r\n                error: action.payload\r\n            }\r\n        case LOGOUT_FAIL:\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            }\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const userReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case UPDATE_PROFILE_REQUEST:\r\n        case UPDATE_PASSWORD_REQUEST:\r\n        case UPDATE_USER_REQUEST:\r\n        case DELETE_USER_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case UPDATE_PROFILE_SUCCESS:\r\n        case UPDATE_PASSWORD_SUCCESS:\r\n        case UPDATE_USER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                isUpdated: action.payload\r\n            }\r\n        case DELETE_USER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                isDeleted: action.payload\r\n            }\r\n\r\n        case UPDATE_PROFILE_FAIL:\r\n        case UPDATE_PASSWORD_FAIL:\r\n        case UPDATE_USER_FAIL:\r\n        case DELETE_USER_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case UPDATE_PROFILE_RESET:\r\n        case UPDATE_PASSWORD_RESET:\r\n        case UPDATE_USER_RESET:\r\n            return {\r\n                ...state,\r\n                isUpdated: false\r\n            }\r\n\r\n        case DELETE_USER_RESET:\r\n            return {\r\n                ...state,\r\n                isDeleted: false\r\n            }\r\n\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const forogotPasswordReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case FORGOT_PASSWORD_REQUEST:\r\n        case NEW_PASSWORD_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                error: null\r\n            }\r\n        case FORGOT_PASSWORD_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                message: action.payload\r\n            }\r\n        case NEW_PASSWORD_SUCCESS:\r\n            return {\r\n                ...state,\r\n                success: action.payload\r\n            }\r\n\r\n        case FORGOT_PASSWORD_FAIL:\r\n        case NEW_PASSWORD_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}\r\n\r\nexport const allUsersReducer = (state = { users: [] }, action) => {\r\n    switch (action.type) {\r\n        case ALL_USERS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            }\r\n        case ALL_USERS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                users: action.payload\r\n            }\r\n\r\n        case ALL_USERS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_DETAILS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            }\r\n        case USER_DETAILS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                user: action.payload\r\n            }\r\n\r\n        case USER_DETAILS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}\r\n","import { ADD_TO_CART, REMOVE_CART_ITEM, SAVE_SHIPPING_INFO } from '../constants/cartConstants';\r\n\r\nexport const cartReducer = (state = { cartItems: [], shippingInfo: {} }, action) => {\r\n    switch (action.type) {\r\n        case ADD_TO_CART:\r\n            const item = action.payload //action.payload contain product\r\n\r\n            //i.product is basically id of product\r\n            const isItemExist = state.cartItems.find(i => i.product === item.product)\r\n            if (isItemExist) {\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map(i => i.product === isItemExist.product ? item : i)\r\n                }\r\n            }\r\n            else {\r\n                // if item is not in cart, simply return whatever items in cart is their already\r\n                return {\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, item]\r\n                }\r\n            }\r\n        case REMOVE_CART_ITEM:\r\n            return {\r\n                ...state,\r\n                // filtering out that product user want to delete\r\n                cartItems: state.cartItems.filter(i => i.product !== action.payload)\r\n            }\r\n        case SAVE_SHIPPING_INFO:\r\n            return {\r\n                ...state,\r\n                shippingInfo: action.payload\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import {\r\n    CREATE_ORDER_FAIL,\r\n    CREATE_ORDER_REQUEST,\r\n    CREATE_ORDER_SUCCESS,\r\n    MY_ORDERS_FAIL,\r\n    MY_ORDERS_REQUEST,\r\n    MY_ORDERS_SUCCESS,\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n    ALL_ORDERS_REQUEST,\r\n    ALL_ORDERS_SUCCESS,\r\n    ALL_ORDERS_FAIL,\r\n    UPDATE_ORDER_REQUEST,\r\n    UPDATE_ORDER_SUCCESS,\r\n    UPDATE_ORDER_FAIL,\r\n    UPDATE_ORDER_RESET,\r\n    DELETE_ORDER_REQUEST,\r\n    DELETE_ORDER_SUCCESS,\r\n    DELETE_ORDER_FAIL,\r\n    DELETE_ORDER_RESET,\r\n    CLEAR_ERRORS\r\n} from '../constants/orderConstant';\r\n\r\nexport const newOrderReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case CREATE_ORDER_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            }\r\n        case CREATE_ORDER_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                order: action.payload\r\n            }\r\n        case CREATE_ORDER_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n// for currently logged user Orders\r\nexport const myOrdersReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n        case MY_ORDERS_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        case MY_ORDERS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload\r\n            }\r\n        case MY_ORDERS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n// get order details\r\nexport const orderDetailReducer = (state = { order: {} }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DETAILS_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        case ORDER_DETAILS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                order: action.payload\r\n            }\r\n        case ORDER_DETAILS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n// get all orders- ADMIN\r\nexport const allOrdersReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n        case ALL_ORDERS_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        case ALL_ORDERS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload.orders,\r\n                totalAmount: action.payload.totalAmount\r\n            }\r\n        case ALL_ORDERS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n// update or delete order- ADMIN\r\nexport const orderReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case UPDATE_ORDER_REQUEST:\r\n        case DELETE_ORDER_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case UPDATE_ORDER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                isUpdated: action.payload\r\n            }\r\n        case DELETE_ORDER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                isDeleted: action.payload\r\n            }\r\n\r\n        case UPDATE_ORDER_FAIL:\r\n        case DELETE_ORDER_FAIL:\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            }\r\n        case UPDATE_ORDER_RESET:\r\n            return {\r\n                ...state,\r\n                isUpdated: false\r\n            }\r\n        case DELETE_ORDER_RESET:\r\n            return {\r\n                ...state,\r\n                isDeleted: false\r\n            }\r\n\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import React, { Fragment } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\n// if user is logged out and try to access resource which required login, we implement protedtedRoutes.\r\nconst ProtectedRoute = ({ isAdmin, component: Component, ...rest }) => {\r\n    const { loading, isAuthenticated, user } = useSelector(state => state.auth);\r\n    return (\r\n        <Fragment>\r\n            {loading === false && (\r\n                <Route\r\n                    {...rest} //exact,path etc\r\n                    render={(props) => {\r\n                        if (isAuthenticated === false) {\r\n                            return <Redirect to='/login' />\r\n                        }\r\n                        if (isAdmin === true && user.role !== 'admin') {\r\n                            return <Redirect to='/' />\r\n                        }\r\n                        return <Component {...props} />\r\n                    }}\r\n                />\r\n            )}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ProtectedRoute\r\n","import axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\nimport Footer from './Components/Layouts/Footer';\nimport Home from './Components/Home';\nimport ProductDetails from './Components/products/ProductDetails';\n\n\n// import carts\nimport Cart from './Components/cart/Cart';\nimport Shipping from './Components/cart/ShippingInfo';\nimport ConfirmOrder from './Components/cart/ConfirmOrder';\nimport Payment from './Components/cart/Payment';\nimport OrderSuccess from './Components/cart/OrderSuccess';\n\n// import orders\nimport ListOrders from './Components/order/ListOrders';\nimport OrderDetails from './Components/order/OrderDetails';\n\n// import Auth or User\nimport Login from './Components/user/Login';\nimport Register from './Components/user/Register';\nimport Profile from './Components/user/Profile';\nimport UpdateProfile from './Components/user/UpdateProfile';\nimport UpdatePassword from './Components/user/UpdatePassword';\nimport ForgotPassword from './Components/user/ForgotPassword';\nimport NewPassword from './Components/user/NewPassword';\n\n// imports admin\nimport Dashboard from './Components/admin/dashboard/Dashboard';\nimport ProductList from './Components/admin/ProductList';\nimport NewProduct from './Components/admin/NewProduct';\nimport UpdateProduct from './Components/admin/UpdateProduct';\nimport OrderList from './Components/admin/OrderList';\nimport ProcessOrder from './Components/admin/ProcessOrder';\nimport UsersList from './Components/admin/UsersList';\nimport UpdateUser from './Components/admin/UpdateUser';\nimport ProductReviews from './Components/admin/ProductReviews';\n\n\nimport store from './store';\nimport { load_user } from './actions/userAction';\nimport ProtectedRoute from './Components/Routes/protectedRoute';\n\n// payment\nimport { Elements } from '@stripe/react-stripe-js';\nimport { loadStripe } from '@stripe/stripe-js';\n\n\nfunction App() {\n  const { user, loading, isAuthenticated } = useSelector(state => state.auth);\n\n  const [stripeApiKey, setStripeApiKey] = useState('');\n\n  // load currently logged user instantly when user refresh the page\n  useEffect(() => {\n    store.dispatch(load_user());\n\n    async function getStripeApiKey() {\n      const { data } = await axios.get('/api/v1/stripeapi');\n      setStripeApiKey(data.stripeApiKey)\n    }\n    getStripeApiKey();\n\n  }, [])\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Route path=\"/\" component={Home} exact />\n\n        <Route path=\"/search/:keyword\" component={Home} />\n\n        <Route path=\"/product/:id\" component={ProductDetails} exact />\n\n        <Route path=\"/cart\" component={Cart} exact />\n        <ProtectedRoute path=\"/shipping\" component={Shipping} />\n        <ProtectedRoute path=\"/order/confirm\" component={ConfirmOrder} />\n        <ProtectedRoute path=\"/success\" component={OrderSuccess} />\n\n        {stripeApiKey &&\n          <Elements stripe={loadStripe(stripeApiKey)}>\n            <ProtectedRoute path=\"/payment\" component={Payment} />\n          </Elements>\n        }\n\n        <Route path='/login' component={Login} />\n        <Route path='/register' component={Register} />\n        <Route path='/password/forgot' component={ForgotPassword} exact />\n        <Route path='/password/reset/:token' component={NewPassword} exact />\n        <ProtectedRoute path='/me' component={Profile} exact />\n        <ProtectedRoute path='/me/update' component={UpdateProfile} exact />\n        <ProtectedRoute path='/password/update' component={UpdatePassword} exact />\n        <ProtectedRoute path='/orders/me' component={ListOrders} exact />\n        {/* <ProtectedRoute path='/order/:id' component={OrderDetails} exact /> */}\n\n\n        <ProtectedRoute path='/dashboard' isAdmin={true} component={Dashboard} exact />\n        <ProtectedRoute path='/admin/products' isAdmin={true} component={ProductList} exact />\n        <ProtectedRoute path='/admin/product' isAdmin={true} component={NewProduct} exact />\n        <ProtectedRoute path='/admin/product/:id' isAdmin={true} component={UpdateProduct} exact />\n        <ProtectedRoute path='/admin/orders' isAdmin={true} component={OrderList} exact />\n        <ProtectedRoute path='/admin/order/:id' isAdmin={true} component={ProcessOrder} exact />\n        <ProtectedRoute path='/admin/users' isAdmin={true} component={UsersList} exact />\n        <ProtectedRoute path='/admin/user/:id' isAdmin={true} component={UpdateUser} exact />\n        <ProtectedRoute path='/admin/reviews' isAdmin={true} component={ProductReviews} exact />\n        \n        {!loading && (!isAuthenticated || user.role !== 'admin') && (\n          <Footer />\n        )}\n\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport { positions, transitions, Provider as AlertProvider } from 'react-alert';\nimport AlertTemplate from 'react-alert-template-basic';\n\n// disable messsge after 5 sec\nconst options = {\n  timeout: 5000,\n  position: positions.BOTTOM_CENTER,\n  transition: transitions.SCALE\n}\n\nReactDOM.render(\n  <Provider store={store}>\n    <AlertProvider template={AlertTemplate} {...options}>\n      <App />\n    </AlertProvider>\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}